window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "centeral_server", "modulename": "centeral_server", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "centeral_server.asgi", "modulename": "centeral_server.asgi", "kind": "module", "doc": "<p>ASGI configuration for the federated learning central server project.</p>\n\n<p>This module configures the ASGI application for handling both HTTP and WebSocket\nconnections in the Django Channels framework. It sets up protocol routing to\nhandle different types of connections appropriately.</p>\n\n<p>The ASGI application supports:\n    - HTTP requests via Django's standard ASGI application\n    - WebSocket connections for real-time tunnel communication</p>\n\n<p>For more information on ASGI and Django Channels, see:\n<a href=\"https://channels.readthedocs.io/en/stable/\">https://channels.readthedocs.io/en/stable/</a></p>\n"}, {"fullname": "centeral_server.asgi.django_asgi_app", "modulename": "centeral_server.asgi", "qualname": "django_asgi_app", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;django.core.handlers.asgi.ASGIHandler object&gt;"}, {"fullname": "centeral_server.asgi.application", "modulename": "centeral_server.asgi", "qualname": "application", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;channels.routing.ProtocolTypeRouter object&gt;"}, {"fullname": "centeral_server.middleware", "modulename": "centeral_server.middleware", "kind": "module", "doc": "<p>Custom Django middleware for the federated learning central server.</p>\n\n<p>This module contains custom middleware classes that modify request/response\nprocessing for the Django application.</p>\n\n<p>Classes:\n    - ForceAsiaKolkataTimezoneMiddleware: Forces Asia/Kolkata timezone for all requests</p>\n"}, {"fullname": "centeral_server.middleware.ForceAsiaKolkataTimezoneMiddleware", "modulename": "centeral_server.middleware", "qualname": "ForceAsiaKolkataTimezoneMiddleware", "kind": "class", "doc": "<p>Middleware to force Asia/Kolkata timezone for all requests.</p>\n\n<p>This middleware ensures that all datetime operations within the\napplication use the Asia/Kolkata timezone, providing consistent\ntime handling across the federated learning system.</p>\n"}, {"fullname": "centeral_server.middleware.ForceAsiaKolkataTimezoneMiddleware.__init__", "modulename": "centeral_server.middleware", "qualname": "ForceAsiaKolkataTimezoneMiddleware.__init__", "kind": "function", "doc": "<p>Initialize the middleware.</p>\n\n<p>Args:\n    get_response (callable): The next middleware or view in the chain</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">get_response</span></span>)</span>"}, {"fullname": "centeral_server.middleware.ForceAsiaKolkataTimezoneMiddleware.get_response", "modulename": "centeral_server.middleware", "qualname": "ForceAsiaKolkataTimezoneMiddleware.get_response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "centeral_server.settings", "modulename": "centeral_server.settings", "kind": "module", "doc": "<p>Django settings for the federated learning central server project.</p>\n\n<p>This module contains all configuration settings for the Django application\nthat serves as the central server in a federated learning system. It includes\ndatabase configuration, middleware setup, static file handling, and various\nsecurity and deployment settings.</p>\n\n<p>Key Features:\n    - WebSocket support via Django Channels\n    - Redis channel layer for real-time communication\n    - REST API framework configuration\n    - Media file handling for model uploads\n    - Security configurations for production deployment</p>\n\n<p>Generated by 'django-admin startproject' using Django 5.1.1.</p>\n\n<p>For more information on this file, see\n<a href=\"https://docs.djangoproject.com/en/5.1/topics/settings/\">https://docs.djangoproject.com/en/5.1/topics/settings/</a></p>\n\n<p>For the full list of settings and their values, see\n<a href=\"https://docs.djangoproject.com/en/5.1/ref/settings/\">https://docs.djangoproject.com/en/5.1/ref/settings/</a></p>\n"}, {"fullname": "centeral_server.settings.BASE_DIR", "modulename": "centeral_server.settings", "qualname": "BASE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/app&#x27;)"}, {"fullname": "centeral_server.settings.FORCE_SCRIPT_NAME", "modulename": "centeral_server.settings", "qualname": "FORCE_SCRIPT_NAME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/var&#x27;"}, {"fullname": "centeral_server.settings.USE_X_FORWARDED_HOST", "modulename": "centeral_server.settings", "qualname": "USE_X_FORWARDED_HOST", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "centeral_server.settings.SECURE_PROXY_SSL_HEADER", "modulename": "centeral_server.settings", "qualname": "SECURE_PROXY_SSL_HEADER", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;HTTP_X_FORWARDED_PROTO&#x27;, &#x27;https&#x27;)"}, {"fullname": "centeral_server.settings.LOGIN_REDIRECT_URL", "modulename": "centeral_server.settings", "qualname": "LOGIN_REDIRECT_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/var/home/&#x27;"}, {"fullname": "centeral_server.settings.SECRET_KEY", "modulename": "centeral_server.settings", "qualname": "SECRET_KEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django-insecure-3ib8!1sm)0_@cpt7bmyooiz5*wnburhrg_3*&amp;t6(yky077oyl2&#x27;"}, {"fullname": "centeral_server.settings.DEBUG", "modulename": "centeral_server.settings", "qualname": "DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "centeral_server.settings.ALLOWED_HOSTS", "modulename": "centeral_server.settings", "qualname": "ALLOWED_HOSTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;10.23.8.207&#x27;, &#x27;*&#x27;]"}, {"fullname": "centeral_server.settings.CSRF_TRUSTED_ORIGINS", "modulename": "centeral_server.settings", "qualname": "CSRF_TRUSTED_ORIGINS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;http://localhost:5090&#x27;, &#x27;http://127.0.0.1:5090&#x27;, &#x27;http://10.23.8.207:5090&#x27;, &#x27;https://your-domain.com&#x27;, &#x27;http://services.iittp.ac.in&#x27;, &#x27;https://services.iittp.ac.in&#x27;]"}, {"fullname": "centeral_server.settings.TIME_ZONE", "modulename": "centeral_server.settings", "qualname": "TIME_ZONE", "kind": "variable", "doc": "<p></p>\n", "default_value": "$TZ"}, {"fullname": "centeral_server.settings.USE_TZ", "modulename": "centeral_server.settings", "qualname": "USE_TZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "centeral_server.settings.INSTALLED_APPS", "modulename": "centeral_server.settings", "qualname": "INSTALLED_APPS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;django.contrib.admin&#x27;, &#x27;django.contrib.auth&#x27;, &#x27;django.contrib.contenttypes&#x27;, &#x27;django.contrib.sessions&#x27;, &#x27;django.contrib.messages&#x27;, &#x27;django.contrib.staticfiles&#x27;, &#x27;rest_framework&#x27;, &#x27;channels&#x27;, &#x27;tunnel&#x27;, &#x27;redis&#x27;, &#x27;web_interface&#x27;, &#x27;vendors&#x27;]"}, {"fullname": "centeral_server.settings.MIDDLEWARE", "modulename": "centeral_server.settings", "qualname": "MIDDLEWARE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;django.middleware.security.SecurityMiddleware&#x27;, &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;, &#x27;django.middleware.common.CommonMiddleware&#x27;, &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;, &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;, &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;, &#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;, &#x27;centeral_server.middleware.ForceAsiaKolkataTimezoneMiddleware&#x27;]"}, {"fullname": "centeral_server.settings.ROOT_URLCONF", "modulename": "centeral_server.settings", "qualname": "ROOT_URLCONF", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;centeral_server.urls&#x27;"}, {"fullname": "centeral_server.settings.TEMPLATES", "modulename": "centeral_server.settings", "qualname": "TEMPLATES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[{&#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;, &#x27;DIRS&#x27;: [], &#x27;APP_DIRS&#x27;: True, &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;, &#x27;django.template.context_processors.request&#x27;, &#x27;django.contrib.auth.context_processors.auth&#x27;, &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]"}, {"fullname": "centeral_server.settings.WSGI_APPLICATION", "modulename": "centeral_server.settings", "qualname": "WSGI_APPLICATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;centeral_server.wsgi.application&#x27;"}, {"fullname": "centeral_server.settings.ASGI_APPLICATION", "modulename": "centeral_server.settings", "qualname": "ASGI_APPLICATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;centeral_server.asgi.application&#x27;"}, {"fullname": "centeral_server.settings.DATABASES", "modulename": "centeral_server.settings", "qualname": "DATABASES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;default&#x27;: {&#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;, &#x27;NAME&#x27;: &#x27;/app/db.sqlite3&#x27;, &#x27;ATOMIC_REQUESTS&#x27;: False, &#x27;AUTOCOMMIT&#x27;: True, &#x27;CONN_MAX_AGE&#x27;: 0, &#x27;CONN_HEALTH_CHECKS&#x27;: False, &#x27;OPTIONS&#x27;: {}, &#x27;TIME_ZONE&#x27;: None, &#x27;USER&#x27;: &#x27;&#x27;, &#x27;PASSWORD&#x27;: &#x27;&#x27;, &#x27;HOST&#x27;: &#x27;&#x27;, &#x27;PORT&#x27;: &#x27;&#x27;, &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None, &#x27;COLLATION&#x27;: None, &#x27;MIGRATE&#x27;: True, &#x27;MIRROR&#x27;: None, &#x27;NAME&#x27;: None}}}"}, {"fullname": "centeral_server.settings.CHANNEL_LAYERS", "modulename": "centeral_server.settings", "qualname": "CHANNEL_LAYERS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;channels_redis.core.RedisChannelLayer&#x27;, &#x27;CONFIG&#x27;: {&#x27;hosts&#x27;: [(&#x27;redis&#x27;, 6379)]}}}"}, {"fullname": "centeral_server.settings.AUTH_PASSWORD_VALIDATORS", "modulename": "centeral_server.settings", "qualname": "AUTH_PASSWORD_VALIDATORS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[{&#x27;NAME&#x27;: &#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;}, {&#x27;NAME&#x27;: &#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;}, {&#x27;NAME&#x27;: &#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;}, {&#x27;NAME&#x27;: &#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;}]"}, {"fullname": "centeral_server.settings.LANGUAGE_CODE", "modulename": "centeral_server.settings", "qualname": "LANGUAGE_CODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;en-us&#x27;"}, {"fullname": "centeral_server.settings.STATIC_URL", "modulename": "centeral_server.settings", "qualname": "STATIC_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;var/static/&#x27;"}, {"fullname": "centeral_server.settings.STATIC_ROOT", "modulename": "centeral_server.settings", "qualname": "STATIC_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/app/static&#x27;)"}, {"fullname": "centeral_server.settings.STATICFILES_STORAGE", "modulename": "centeral_server.settings", "qualname": "STATICFILES_STORAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;whitenoise.storage.CompressedManifestStaticFilesStorage&#x27;"}, {"fullname": "centeral_server.settings.DEFAULT_AUTO_FIELD", "modulename": "centeral_server.settings", "qualname": "DEFAULT_AUTO_FIELD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django.db.models.BigAutoField&#x27;"}, {"fullname": "centeral_server.settings.REST_FRAMEWORK", "modulename": "centeral_server.settings", "qualname": "REST_FRAMEWORK", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.SessionAuthentication&#x27;], &#x27;DEFAULT_PERMISSION_CLASSES&#x27;: [&#x27;rest_framework.permissions.IsAuthenticated&#x27;]}"}, {"fullname": "centeral_server.settings.MEDIA_URL", "modulename": "centeral_server.settings", "qualname": "MEDIA_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/media/&#x27;"}, {"fullname": "centeral_server.settings.MEDIA_ROOT", "modulename": "centeral_server.settings", "qualname": "MEDIA_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/app/media&#x27;)"}, {"fullname": "centeral_server.settings.SERVER_UPLOAD_DIR", "modulename": "centeral_server.settings", "qualname": "SERVER_UPLOAD_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/app/media/server_path_uploads&#x27;)"}, {"fullname": "centeral_server.urls", "modulename": "centeral_server.urls", "kind": "module", "doc": "<p>URL configuration for the federated learning central server project.</p>\n\n<p>This module defines the main URL routing for the entire Django application,\nincluding admin interface, API endpoints, web interface, and proxy functionality.</p>\n\n<p>URL Patterns:\n    - homes/<house_id>/<path>: HTTP proxy to remote home servers via WebSocket\n    - admin/: Django admin interface\n    - tunnel/: Tunnel API endpoints for registration and management\n    - /: Web interface for user interactions\n    - vendors/: Vendor marketplace endpoints</p>\n\n<p>Static file serving is also configured for development and production.</p>\n"}, {"fullname": "centeral_server.urls.urlpatterns", "modulename": "centeral_server.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;^homes/(?P&lt;house_id&gt;[A-Z0-9]{6})/(?P&lt;path&gt;.*)$&#x27;&gt;, &lt;URLResolver &lt;URLPattern list&gt; (admin:admin) &#x27;admin/&#x27;&gt;, &lt;URLResolver &lt;module &#x27;tunnel.urls&#x27; from &#x27;/app/tunnel/urls.py&#x27;&gt; (None:None) &#x27;tunnel/&#x27;&gt;, &lt;URLResolver &lt;module &#x27;web_interface.urls&#x27; from &#x27;/app/web_interface/urls.py&#x27;&gt; (None:None) &#x27;&#x27;&gt;, &lt;URLResolver &lt;module &#x27;vendors.urls&#x27; from &#x27;/app/vendors/urls.py&#x27;&gt; (vendors:vendors) &#x27;vendors/&#x27;&gt;, &lt;URLPattern &#x27;^media/(?P&lt;path&gt;.*)$&#x27;&gt;]"}, {"fullname": "centeral_server.wsgi", "modulename": "centeral_server.wsgi", "kind": "module", "doc": "<p>WSGI configuration for the federated learning central server project.</p>\n\n<p>This module configures the WSGI callable for deploying the Django application\nin traditional WSGI-compatible web servers like Apache or Gunicorn.</p>\n\n<p>Note: For WebSocket support, use the ASGI configuration instead of WSGI.\nThis WSGI configuration is provided for compatibility with HTTP-only deployments.</p>\n\n<p>For more information on this file, see\n<a href=\"https://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/\">https://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/</a></p>\n"}, {"fullname": "centeral_server.wsgi.application", "modulename": "centeral_server.wsgi", "qualname": "application", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;django.core.handlers.wsgi.WSGIHandler object&gt;"}, {"fullname": "web_interface", "modulename": "web_interface", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "web_interface.admin", "modulename": "web_interface.admin", "kind": "module", "doc": "<p>Django admin configuration for the web interface application.</p>\n\n<p>This module configures the Django admin interface for any models\nspecific to the web interface application. Currently, this application\nprimarily handles views and templates without custom models.</p>\n\n<p>Note: Most admin functionality is handled in the tunnel application\nwhere the core models (Clients, HouseTunnel, RegistrationToken) are defined.</p>\n"}, {"fullname": "web_interface.apps", "modulename": "web_interface.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "web_interface.apps.WebInterfaceConfig", "modulename": "web_interface.apps", "qualname": "WebInterfaceConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "web_interface.apps.WebInterfaceConfig.default_auto_field", "modulename": "web_interface.apps", "qualname": "WebInterfaceConfig.default_auto_field", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django.db.models.BigAutoField&#x27;"}, {"fullname": "web_interface.apps.WebInterfaceConfig.name", "modulename": "web_interface.apps", "qualname": "WebInterfaceConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;web_interface&#x27;"}, {"fullname": "web_interface.models", "modulename": "web_interface.models", "kind": "module", "doc": "<p>Django models for the web interface application.</p>\n\n<p>This module would contain models specific to the web interface functionality.\nCurrently, the web interface primarily uses models from the tunnel application\n(Clients, HouseTunnel, RegistrationToken) and doesn't define additional models.</p>\n\n<p>The web interface focuses on providing user-friendly views and templates\nfor interacting with the federated learning system rather than defining\nits own data models.</p>\n"}, {"fullname": "web_interface.tests", "modulename": "web_interface.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "web_interface.urls", "modulename": "web_interface.urls", "kind": "module", "doc": "<p>URL configuration for the web interface application.</p>\n\n<p>This module defines the URL patterns for the web-based user interface\nof the federated learning central server.</p>\n\n<p>URL Patterns:\n    - home/: Main landing page\n    - login/: User login page\n    - register/: User registration page\n    - dashboard/: User dashboard with tokens and tunnels</p>\n"}, {"fullname": "web_interface.urls.urlpatterns", "modulename": "web_interface.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;home/&#x27; [name=&#x27;home&#x27;]&gt;, &lt;URLPattern &#x27;login/&#x27; [name=&#x27;login&#x27;]&gt;, &lt;URLPattern &#x27;register/&#x27; [name=&#x27;register&#x27;]&gt;, &lt;URLPattern &#x27;dashboard/&#x27; [name=&#x27;dashboard&#x27;]&gt;]"}, {"fullname": "web_interface.views", "modulename": "web_interface.views", "kind": "module", "doc": "<p>Django views for the web interface application.</p>\n\n<p>This module provides web-based user interface views for the federated learning\ncentral server. It handles user authentication, dashboard functionality, and\nregistration token management through a web interface.</p>\n\n<p>Functions:\n    - home: Render the main home page\n    - login_view: Handle user login\n    - register_view: Handle user registration\n    - dashboard: Display user dashboard with tokens and tunnels</p>\n"}, {"fullname": "web_interface.views.home", "modulename": "web_interface.views", "qualname": "home", "kind": "function", "doc": "<p>Render the home page of the federated learning management interface.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Rendered home page template</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "web_interface.views.login_view", "modulename": "web_interface.views", "qualname": "login_view", "kind": "function", "doc": "<p>Handle user login functionality.</p>\n\n<p>Authenticates users by validating their credentials against the database\nand creates a session for successful logins.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Rendered login page or redirect to dashboard on success</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "web_interface.views.register_view", "modulename": "web_interface.views", "qualname": "register_view", "kind": "function", "doc": "<p>Handle user registration functionality.</p>\n\n<p>Allows new users to create accounts with email validation and\npassword confirmation checks.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Rendered registration page or redirect to login on success</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "web_interface.views.dashboard", "modulename": "web_interface.views", "qualname": "dashboard", "kind": "function", "doc": "<p>Display the user dashboard with registration tokens and house tunnels.</p>\n\n<p>Shows the user's current registration tokens, house tunnel connections,\nand provides functionality to create new registration tokens.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Rendered dashboard page with user data and forms</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel", "modulename": "tunnel", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "tunnel.admin", "modulename": "tunnel.admin", "kind": "module", "doc": "<p>Django admin configuration for the tunnel application.</p>\n\n<p>This module configures the Django admin interface for managing tunnel-related\nmodels including registration tokens, house tunnels, and client accounts.</p>\n\n<p>Admin Classes:\n    - RegistrationTokenAdmin: Admin interface for registration tokens\n    - HouseTunnelAdmin: Admin interface for house tunnel connections\n    - UserAdmin: Admin interface for client accounts</p>\n"}, {"fullname": "tunnel.admin.RegistrationTokenAdmin", "modulename": "tunnel.admin", "qualname": "RegistrationTokenAdmin", "kind": "class", "doc": "<p>Admin interface for managing registration tokens.</p>\n\n<p>Provides functionality to view and manage time-limited registration tokens\nused for secure client onboarding.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "tunnel.admin.RegistrationTokenAdmin.list_display", "modulename": "tunnel.admin", "qualname": "RegistrationTokenAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;token&#x27;, &#x27;expires_at&#x27;)"}, {"fullname": "tunnel.admin.RegistrationTokenAdmin.readonly_fields", "modulename": "tunnel.admin", "qualname": "RegistrationTokenAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;token&#x27;,)"}, {"fullname": "tunnel.admin.RegistrationTokenAdmin.save_model", "modulename": "tunnel.admin", "qualname": "RegistrationTokenAdmin.save_model", "kind": "function", "doc": "<p>Generate a random token when creating new registration tokens.</p>\n\n<p>Args:\n    request: The HTTP request object\n    obj: The RegistrationToken instance being saved\n    form: The admin form instance\n    change: Boolean indicating if this is an update (True) or create (False)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">obj</span>, </span><span class=\"param\"><span class=\"n\">form</span>, </span><span class=\"param\"><span class=\"n\">change</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.admin.RegistrationTokenAdmin.media", "modulename": "tunnel.admin", "qualname": "RegistrationTokenAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "tunnel.admin.HouseTunnelAdmin", "modulename": "tunnel.admin", "qualname": "HouseTunnelAdmin", "kind": "class", "doc": "<p>Admin interface for managing house tunnel connections.</p>\n\n<p>Provides monitoring and management capabilities for WebSocket tunnel\nconnections between the central server and home servers.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "tunnel.admin.HouseTunnelAdmin.list_display", "modulename": "tunnel.admin", "qualname": "HouseTunnelAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;house_id&#x27;, &#x27;connected&#x27;, &#x27;last_seen&#x27;)"}, {"fullname": "tunnel.admin.HouseTunnelAdmin.readonly_fields", "modulename": "tunnel.admin", "qualname": "HouseTunnelAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;house_id&#x27;, &#x27;last_seen&#x27;)"}, {"fullname": "tunnel.admin.HouseTunnelAdmin.fields", "modulename": "tunnel.admin", "qualname": "HouseTunnelAdmin.fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;house_id&#x27;, &#x27;secret_key&#x27;, &#x27;connected&#x27;, &#x27;last_seen&#x27;)"}, {"fullname": "tunnel.admin.HouseTunnelAdmin.media", "modulename": "tunnel.admin", "qualname": "HouseTunnelAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "tunnel.admin.UserAdmin", "modulename": "tunnel.admin", "qualname": "UserAdmin", "kind": "class", "doc": "<p>Admin interface for managing client accounts.</p>\n\n<p>Provides user management functionality for clients in the federated\nlearning system.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "tunnel.admin.UserAdmin.list_display", "modulename": "tunnel.admin", "qualname": "UserAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;userid&#x27;, &#x27;email&#x27;, &#x27;password&#x27;)"}, {"fullname": "tunnel.admin.UserAdmin.media", "modulename": "tunnel.admin", "qualname": "UserAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "tunnel.apps", "modulename": "tunnel.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "tunnel.apps.TunnelConfig", "modulename": "tunnel.apps", "qualname": "TunnelConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "tunnel.apps.TunnelConfig.name", "modulename": "tunnel.apps", "qualname": "TunnelConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;tunnel&#x27;"}, {"fullname": "tunnel.consumers", "modulename": "tunnel.consumers", "kind": "module", "doc": "<p>WebSocket consumers for the tunnel application.</p>\n\n<p>This module defines WebSocket consumers that handle real-time communication\nbetween the central server and remote home servers in the federated learning\nsystem. It manages authentication, connection state, and message routing.</p>\n\n<p>Classes:\n    - TunnelConsumer: Main WebSocket consumer for tunnel connections</p>\n"}, {"fullname": "tunnel.consumers.TunnelConsumer", "modulename": "tunnel.consumers", "qualname": "TunnelConsumer", "kind": "class", "doc": "<p>WebSocket consumer for handling tunnel connections from home servers.</p>\n\n<p>This consumer manages the lifecycle of WebSocket connections from remote\nhome servers, handles authentication, and routes HTTP proxy requests\nbetween the central server and home servers.</p>\n\n<p>Attributes:\n    house_id (str): The ID of the connected house, set after authentication</p>\n", "bases": "channels.generic.websocket.AsyncWebsocketConsumer"}, {"fullname": "tunnel.consumers.TunnelConsumer.connect", "modulename": "tunnel.consumers", "qualname": "TunnelConsumer.connect", "kind": "function", "doc": "<p>Handle new WebSocket connections.</p>\n\n<p>Accepts the connection immediately but requires authentication\nbefore the connection becomes functional.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "tunnel.consumers.TunnelConsumer.disconnect", "modulename": "tunnel.consumers", "qualname": "TunnelConsumer.disconnect", "kind": "function", "doc": "<p>Handle WebSocket disconnection.</p>\n\n<p>Updates the tunnel's connection status to False and removes\nthe consumer from the house group when a connection is closed.</p>\n\n<p>Args:\n    close_code (int): The WebSocket close code</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">close_code</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "tunnel.consumers.TunnelConsumer.receive", "modulename": "tunnel.consumers", "qualname": "TunnelConsumer.receive", "kind": "function", "doc": "<p>Handle incoming WebSocket messages.</p>\n\n<p>Processes different types of messages including authentication\nrequests and HTTP response frames from home servers.</p>\n\n<p>Args:\n    text_data (str): JSON-encoded message from the client</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "tunnel.consumers.TunnelConsumer.forward_http", "modulename": "tunnel.consumers", "qualname": "TunnelConsumer.forward_http", "kind": "function", "doc": "<p>Forward HTTP request frames to the connected home server.</p>\n\n<p>This method is called by the channel layer when a proxy request\nneeds to be forwarded to this specific home server connection.</p>\n\n<p>Args:\n    event (dict): Event containing the HTTP request frame to forward</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "tunnel.migrations", "modulename": "tunnel.migrations", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "tunnel.migrations.0001_initial", "modulename": "tunnel.migrations.0001_initial", "kind": "module", "doc": "<p>Initial database migration for the tunnel application.</p>\n\n<p>This migration creates the core database schema for the federated learning\ncentral server's tunnel functionality. It establishes tables for client\nmanagement, tunnel connections, and registration tokens.</p>\n\n<p>Generated by Django 5.1 on 2025-07-01 04:52</p>\n\n<p>Tables Created:\n    - Clients: User accounts for the federated learning system\n    - HouseTunnel: WebSocket tunnel connections to home servers\n    - RegistrationToken: Time-limited tokens for secure registration</p>\n"}, {"fullname": "tunnel.migrations.0001_initial.Migration", "modulename": "tunnel.migrations.0001_initial", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from\ndjango.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "tunnel.migrations.0001_initial.Migration.initial", "modulename": "tunnel.migrations.0001_initial", "qualname": "Migration.initial", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "tunnel.migrations.0001_initial.Migration.dependencies", "modulename": "tunnel.migrations.0001_initial", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, {"fullname": "tunnel.migrations.0001_initial.Migration.operations", "modulename": "tunnel.migrations.0001_initial", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;CreateModel  name=&#x27;Clients&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.BigAutoField&gt;), (&#x27;email&#x27;, &lt;django.db.models.fields.EmailField&gt;), (&#x27;userid&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;password&#x27;, &lt;django.db.models.fields.CharField&gt;)]&gt;, &lt;CreateModel  name=&#x27;HouseTunnel&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.BigAutoField&gt;), (&#x27;created_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;house_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;secret_key&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;connected&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;last_seen&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;user&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;)]&gt;, &lt;CreateModel  name=&#x27;RegistrationToken&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.BigAutoField&gt;), (&#x27;token&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;expires_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;is_used&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;user&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;)]&gt;]"}, {"fullname": "tunnel.models", "modulename": "tunnel.models", "kind": "module", "doc": "<p>Django models for the tunnel application.</p>\n\n<p>This module defines the core data models for a federated learning central server\nthat manages secure tunnels between clients and home servers. It includes models\nfor client authentication, house tunnel connections, and registration tokens.</p>\n\n<p>Classes:\n    - Clients: User model for client authentication\n    - HouseTunnel: Model representing WebSocket tunnel connections to home servers\n    - RegistrationToken: Time-limited tokens for secure client registration</p>\n"}, {"fullname": "tunnel.models.generate_new_id", "modulename": "tunnel.models", "qualname": "generate_new_id", "kind": "function", "doc": "<p>Generate a unique 6-character alphanumeric house ID.</p>\n\n<p>Continuously generates random 6-character codes using uppercase letters\nand digits until a unique one is found that doesn't exist in the database.</p>\n\n<p>Returns:\n    str: A unique 6-character house ID (e.g., 'A1B2C3')</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients", "modulename": "tunnel.models", "qualname": "Clients", "kind": "class", "doc": "<p>Model representing authenticated clients in the federated learning system.</p>\n\n<p>This model stores client credentials and provides password hashing/verification\nfunctionality for secure authentication.</p>\n\n<p>Attributes:\n    email (EmailField): Unique email address for the client\n    userid (CharField): Unique username/user ID for the client\n    password (CharField): Hashed password stored securely</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "tunnel.models.Clients.email", "modulename": "tunnel.models", "qualname": "Clients.email", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.userid", "modulename": "tunnel.models", "qualname": "Clients.userid", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.password", "modulename": "tunnel.models", "qualname": "Clients.password", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.set_password", "modulename": "tunnel.models", "qualname": "Clients.set_password", "kind": "function", "doc": "<p>Hash and set the client's password.</p>\n\n<p>Args:\n    raw_password (str): Plain text password to be hashed and stored</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raw_password</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.check_password", "modulename": "tunnel.models", "qualname": "Clients.check_password", "kind": "function", "doc": "<p>Verify a password against the stored hash.</p>\n\n<p>Args:\n    raw_password (str): Plain text password to verify</p>\n\n<p>Returns:\n    bool: True if password matches, False otherwise</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raw_password</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.DoesNotExist", "modulename": "tunnel.models", "qualname": "Clients.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "tunnel.models.Clients.MultipleObjectsReturned", "modulename": "tunnel.models", "qualname": "Clients.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "tunnel.models.Clients.id", "modulename": "tunnel.models", "qualname": "Clients.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.objects", "modulename": "tunnel.models", "qualname": "Clients.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.Clients.housetunnels", "modulename": "tunnel.models", "qualname": "Clients.housetunnels", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "tunnel.models.Clients.tokens", "modulename": "tunnel.models", "qualname": "Clients.tokens", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "tunnel.models.HouseTunnel", "modulename": "tunnel.models", "qualname": "HouseTunnel", "kind": "class", "doc": "<p>Model representing WebSocket tunnel connections to home servers.</p>\n\n<p>This model tracks secure tunnels between the central server and remote\nhome servers in the federated learning network. Each tunnel has a unique\nhouse ID and manages connection state.</p>\n\n<p>Attributes:\n    created_at (DateTimeField): Timestamp when tunnel was created\n    user (ForeignKey): Reference to the client who owns this tunnel\n    house_id (CharField): Unique 6-character identifier for the house\n    secret_key (CharField): Hashed authentication token for secure connection\n    connected (BooleanField): Current connection status\n    last_seen (DateTimeField): Last activity timestamp</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "tunnel.models.HouseTunnel.created_at", "modulename": "tunnel.models", "qualname": "HouseTunnel.created_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.user", "modulename": "tunnel.models", "qualname": "HouseTunnel.user", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "tunnel.models.HouseTunnel.house_id", "modulename": "tunnel.models", "qualname": "HouseTunnel.house_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.secret_key", "modulename": "tunnel.models", "qualname": "HouseTunnel.secret_key", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.connected", "modulename": "tunnel.models", "qualname": "HouseTunnel.connected", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.last_seen", "modulename": "tunnel.models", "qualname": "HouseTunnel.last_seen", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.DoesNotExist", "modulename": "tunnel.models", "qualname": "HouseTunnel.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "tunnel.models.HouseTunnel.MultipleObjectsReturned", "modulename": "tunnel.models", "qualname": "HouseTunnel.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "tunnel.models.HouseTunnel.get_next_by_created_at", "modulename": "tunnel.models", "qualname": "HouseTunnel.get_next_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.get_previous_by_created_at", "modulename": "tunnel.models", "qualname": "HouseTunnel.get_previous_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.user_id", "modulename": "tunnel.models", "qualname": "HouseTunnel.user_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "tunnel.models.HouseTunnel.get_next_by_last_seen", "modulename": "tunnel.models", "qualname": "HouseTunnel.get_next_by_last_seen", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.get_previous_by_last_seen", "modulename": "tunnel.models", "qualname": "HouseTunnel.get_previous_by_last_seen", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.id", "modulename": "tunnel.models", "qualname": "HouseTunnel.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.HouseTunnel.objects", "modulename": "tunnel.models", "qualname": "HouseTunnel.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken", "modulename": "tunnel.models", "qualname": "RegistrationToken", "kind": "class", "doc": "<p>Model for time-limited registration tokens used for secure client onboarding.</p>\n\n<p>These tokens provide a secure way to register new clients or establish\nnew tunnel connections with expiration times and single-use constraints.</p>\n\n<p>Attributes:\n    user (ForeignKey): Reference to the client who owns this token\n    token (CharField): Unique token string for authentication\n    expires_at (DateTimeField): Expiration timestamp for the token\n    is_used (BooleanField): Flag indicating if token has been consumed</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "tunnel.models.RegistrationToken.user", "modulename": "tunnel.models", "qualname": "RegistrationToken.user", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "tunnel.models.RegistrationToken.token", "modulename": "tunnel.models", "qualname": "RegistrationToken.token", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.expires_at", "modulename": "tunnel.models", "qualname": "RegistrationToken.expires_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.is_used", "modulename": "tunnel.models", "qualname": "RegistrationToken.is_used", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.is_valid", "modulename": "tunnel.models", "qualname": "RegistrationToken.is_valid", "kind": "function", "doc": "<p>Check if the registration token is still valid.</p>\n\n<p>Returns:\n    bool: True if token hasn't expired, False otherwise</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.DoesNotExist", "modulename": "tunnel.models", "qualname": "RegistrationToken.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "tunnel.models.RegistrationToken.MultipleObjectsReturned", "modulename": "tunnel.models", "qualname": "RegistrationToken.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "tunnel.models.RegistrationToken.user_id", "modulename": "tunnel.models", "qualname": "RegistrationToken.user_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "tunnel.models.RegistrationToken.get_next_by_expires_at", "modulename": "tunnel.models", "qualname": "RegistrationToken.get_next_by_expires_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.get_previous_by_expires_at", "modulename": "tunnel.models", "qualname": "RegistrationToken.get_previous_by_expires_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.id", "modulename": "tunnel.models", "qualname": "RegistrationToken.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.models.RegistrationToken.objects", "modulename": "tunnel.models", "qualname": "RegistrationToken.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.routing", "modulename": "tunnel.routing", "kind": "module", "doc": "<p>WebSocket URL routing for the tunnel application.</p>\n\n<p>This module defines the WebSocket URL patterns for the tunnel application,\nmapping WebSocket endpoints to their corresponding consumers.</p>\n\n<p>URL Patterns:\n    - ws/tunnel/: WebSocket endpoint for tunnel connections</p>\n"}, {"fullname": "tunnel.routing.websocket_urlpatterns", "modulename": "tunnel.routing", "qualname": "websocket_urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;ws/tunnel/$&#x27;&gt;]"}, {"fullname": "tunnel.tests", "modulename": "tunnel.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "tunnel.urls", "modulename": "tunnel.urls", "kind": "module", "doc": "<p>URL configuration for the tunnel application.</p>\n\n<p>This module defines the HTTP URL patterns for the tunnel application,\nincluding API endpoints for client registration and token management.</p>\n\n<p>URL Patterns:\n    - api/register_or_get_id/: Client registration endpoint\n    - api/admin/create_registration_token/: Admin token creation endpoint</p>\n"}, {"fullname": "tunnel.urls.urlpatterns", "modulename": "tunnel.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;api/register_or_get_id/&#x27;&gt;, &lt;URLPattern &#x27;api/admin/create_registration_token/&#x27; [name=&#x27;create_registration_token&#x27;]&gt;]"}, {"fullname": "tunnel.utils", "modulename": "tunnel.utils", "kind": "module", "doc": "<p>Utility functions for WebSocket communication in the tunnel application.</p>\n\n<p>This module provides helper functions for managing asynchronous communication\nbetween the central server and remote home servers via WebSocket channels.\nIt implements a request-response pattern for HTTP proxying over WebSocket.</p>\n\n<p>Functions:\n    - send_and_wait: Send a request frame and wait for a response</p>\n"}, {"fullname": "tunnel.utils.pending_responses", "modulename": "tunnel.utils", "qualname": "pending_responses", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "tunnel.utils.send_and_wait", "modulename": "tunnel.utils", "qualname": "send_and_wait", "kind": "function", "doc": "<p>Send a frame to a WebSocket group and wait for a matching response.</p>\n\n<p>This function implements request-response communication over WebSocket\nby sending a frame to the specified house group and waiting for a\nresponse with the matching frame ID.</p>\n\n<p>Args:\n    house_id (str): The house ID identifying the target WebSocket group\n    frame (dict): The request frame containing action, id, and other data\n    timeout (int): Maximum time to wait for response in seconds (default: 15)</p>\n\n<p>Returns:\n    dict: The response frame from the home server</p>\n\n<p>Raises:\n    asyncio.TimeoutError: If no response is received within the timeout period</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">house_id</span>, </span><span class=\"param\"><span class=\"n\">frame</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">15</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "tunnel.views", "modulename": "tunnel.views", "kind": "module", "doc": "<p>Django views for the tunnel application.</p>\n\n<p>This module handles HTTP requests and WebSocket communication for the federated\nlearning central server's tunnel functionality. It manages client registration,\ntunnel authentication, and HTTP proxying to remote home servers.</p>\n\n<p>Key Functions:\n    - register_or_get_id: Handle client registration with token validation\n    - proxy_to_home: Proxy HTTP requests to remote home servers via WebSocket\n    - create_registration_token: Generate new registration tokens for clients</p>\n"}, {"fullname": "tunnel.views.register_or_get_id", "modulename": "tunnel.views", "qualname": "register_or_get_id", "kind": "function", "doc": "<p>Handle client registration or house ID retrieval using registration tokens.</p>\n\n<p>This endpoint validates registration tokens and either registers a new client\nor returns an existing house ID. It implements token-based authentication\nfor secure client onboarding in the federated learning system.</p>\n\n<p>Args:\n    request (HttpRequest): POST request containing registration token</p>\n\n<p>Returns:\n    JsonResponse: Success response with house_id and secret_key, or error</p>\n\n<p>Request Body:\n    {\n        \"token\": \"registration_token_string\"\n    }</p>\n\n<p>Response:\n    Success: {\"house_id\": \"ABC123\", \"secret_key\": \"hashed_key\"}\n    Error: {\"error\": \"error_description\"}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tunnel.views.proxy_to_home", "modulename": "tunnel.views", "qualname": "proxy_to_home", "kind": "function", "doc": "<p>Proxy HTTP requests to remote home servers via WebSocket.</p>\n\n<p>This asynchronous view function proxies incoming HTTP requests to the\nappropriate home server based on the house ID. It handles WebSocket\ncommunication for request/response relay and manages HTTP headers and\ncookies for seamless proxying.</p>\n\n<p>Args:\n    request (HttpRequest): The original HTTP request from the client.\n    house_id (str): The ID of the house (client) to proxy the request to.\n    path (str): The specific path on the home server to proxy the request to.</p>\n\n<p>Returns:\n    StreamingHttpResponse: The HTTP response from the home server, streamed\n    back to the client.</p>\n\n<p>Raises:\n    Exception: If there is an error during the proxying process, a 502 Bad\n    Gateway response is returned with error details.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">house_id</span>, </span><span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "tunnel.views.create_registration_token", "modulename": "tunnel.views", "qualname": "create_registration_token", "kind": "function", "doc": "<p>Create a new registration token for a client.</p>\n\n<p>This view function generates a new registration token for a client\nwith a specified time-to-live (TTL). The token is used for client\nregistration and authentication in the federated learning system.</p>\n\n<p>Args:\n    request (HttpRequest): POST request containing TTL for the token</p>\n\n<p>Returns:\n    Response: Success response with the new token and its expiration time,\n    or error.</p>\n\n<p>Request Body:\n    {\n        \"ttl\": 10  # Time-to-live in minutes\n    }</p>\n\n<p>Response:\n    Success: {\"token\": \"new_token_string\", \"expires_at\": \"expiration_time\"}\n    Error: {\"error\": \"error_description\"}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors", "modulename": "vendors", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.admin", "modulename": "vendors.admin", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.admin.get_all_field_names", "modulename": "vendors.admin", "qualname": "get_all_field_names", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.admin.VendorAdmin", "modulename": "vendors.admin", "qualname": "VendorAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "vendors.admin.VendorAdmin.list_display", "modulename": "vendors.admin", "qualname": "VendorAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;id&#x27;, &#x27;userid&#x27;, &#x27;username&#x27;, &#x27;email&#x27;, &#x27;mobile_no&#x27;, &#x27;password&#x27;]"}, {"fullname": "vendors.admin.VendorAdmin.media", "modulename": "vendors.admin", "qualname": "VendorAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.admin.ModelEntryAdmin", "modulename": "vendors.admin", "qualname": "ModelEntryAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "vendors.admin.ModelEntryAdmin.list_display", "modulename": "vendors.admin", "qualname": "ModelEntryAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;model_id&#x27;, &#x27;name&#x27;, &#x27;vendor&#x27;, &#x27;description&#x27;, &#x27;tag&#x27;, &#x27;visibility&#x27;, &#x27;upload_date&#x27;, &#x27;base_image&#x27;]"}, {"fullname": "vendors.admin.ModelEntryAdmin.media", "modulename": "vendors.admin", "qualname": "ModelEntryAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.admin.ModelVersionAdmin", "modulename": "vendors.admin", "qualname": "ModelVersionAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "vendors.admin.ModelVersionAdmin.list_display", "modulename": "vendors.admin", "qualname": "ModelVersionAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;version_id&#x27;, &#x27;model_entry&#x27;, &#x27;version_name&#x27;, &#x27;file&#x27;, &#x27;size&#x27;, &#x27;compatibility&#x27;, &#x27;description&#x27;, &#x27;date_uploaded&#x27;]"}, {"fullname": "vendors.admin.ModelVersionAdmin.media", "modulename": "vendors.admin", "qualname": "ModelVersionAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.apps", "modulename": "vendors.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.apps.VendorsConfig", "modulename": "vendors.apps", "qualname": "VendorsConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "vendors.apps.VendorsConfig.default_auto_field", "modulename": "vendors.apps", "qualname": "VendorsConfig.default_auto_field", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django.db.models.BigAutoField&#x27;"}, {"fullname": "vendors.apps.VendorsConfig.name", "modulename": "vendors.apps", "qualname": "VendorsConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;vendors&#x27;"}, {"fullname": "vendors.forms", "modulename": "vendors.forms", "kind": "module", "doc": "<p>Django forms for the vendors application.</p>\n\n<p>This module defines forms for vendor registration, authentication, and\nmodel management in the ML marketplace. It provides form validation\nand user interface components for vendor interactions.</p>\n\n<p>Classes:\n    - VendorRegistrationForm: Form for new vendor account creation\n    - VendorLoginForm: Form for vendor authentication\n    - ModelEntryForm: Form for creating new model entries\n    - ModelVersionForm: Form for uploading new model versions</p>\n"}, {"fullname": "vendors.forms.VendorRegistrationForm", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm", "kind": "class", "doc": "<p>Form for vendor account registration.</p>\n\n<p>Provides form fields and validation for creating new vendor accounts\nin the ML marketplace system.</p>\n", "bases": "django.forms.models.ModelForm"}, {"fullname": "vendors.forms.VendorRegistrationForm.password", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.password", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.forms.VendorRegistrationForm.Meta", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.Meta", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "vendors.forms.VendorRegistrationForm.Meta.model", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.Meta.model", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;vendors.models.Vendor&#x27;&gt;"}, {"fullname": "vendors.forms.VendorRegistrationForm.Meta.fields", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.Meta.fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;userid&#x27;, &#x27;username&#x27;, &#x27;email&#x27;, &#x27;mobile_no&#x27;, &#x27;password&#x27;]"}, {"fullname": "vendors.forms.VendorRegistrationForm.media", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.media", "kind": "variable", "doc": "<p>Return all media required to render the widgets on this form.</p>\n"}, {"fullname": "vendors.forms.VendorRegistrationForm.declared_fields", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.declared_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;password&#x27;: &lt;django.forms.fields.CharField object&gt;}"}, {"fullname": "vendors.forms.VendorRegistrationForm.base_fields", "modulename": "vendors.forms", "qualname": "VendorRegistrationForm.base_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;userid&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;username&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;email&#x27;: &lt;django.forms.fields.EmailField object&gt;, &#x27;mobile_no&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;password&#x27;: &lt;django.forms.fields.CharField object&gt;}"}, {"fullname": "vendors.forms.VendorLoginForm", "modulename": "vendors.forms", "qualname": "VendorLoginForm", "kind": "class", "doc": "<p>Form for vendor authentication.</p>\n\n<p>Simple login form with userid and password fields for vendor\nauthentication in the marketplace.</p>\n", "bases": "django.forms.forms.Form"}, {"fullname": "vendors.forms.VendorLoginForm.userid", "modulename": "vendors.forms", "qualname": "VendorLoginForm.userid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.forms.VendorLoginForm.password", "modulename": "vendors.forms", "qualname": "VendorLoginForm.password", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.forms.VendorLoginForm.media", "modulename": "vendors.forms", "qualname": "VendorLoginForm.media", "kind": "variable", "doc": "<p>Return all media required to render the widgets on this form.</p>\n"}, {"fullname": "vendors.forms.VendorLoginForm.declared_fields", "modulename": "vendors.forms", "qualname": "VendorLoginForm.declared_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;userid&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;password&#x27;: &lt;django.forms.fields.CharField object&gt;}"}, {"fullname": "vendors.forms.VendorLoginForm.base_fields", "modulename": "vendors.forms", "qualname": "VendorLoginForm.base_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;userid&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;password&#x27;: &lt;django.forms.fields.CharField object&gt;}"}, {"fullname": "vendors.forms.ModelEntryForm", "modulename": "vendors.forms", "qualname": "ModelEntryForm", "kind": "class", "doc": "<p>Form for creating new ML model entries.</p>\n\n<p>Allows vendors to upload and describe new machine learning models\nto the marketplace with metadata and visibility settings.</p>\n", "bases": "django.forms.models.ModelForm"}, {"fullname": "vendors.forms.ModelEntryForm.Meta", "modulename": "vendors.forms", "qualname": "ModelEntryForm.Meta", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "vendors.forms.ModelEntryForm.Meta.model", "modulename": "vendors.forms", "qualname": "ModelEntryForm.Meta.model", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;vendors.models.ModelEntry&#x27;&gt;"}, {"fullname": "vendors.forms.ModelEntryForm.Meta.fields", "modulename": "vendors.forms", "qualname": "ModelEntryForm.Meta.fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;name&#x27;, &#x27;description&#x27;, &#x27;tag&#x27;, &#x27;visibility&#x27;, &#x27;base_image&#x27;]"}, {"fullname": "vendors.forms.ModelEntryForm.media", "modulename": "vendors.forms", "qualname": "ModelEntryForm.media", "kind": "variable", "doc": "<p>Return all media required to render the widgets on this form.</p>\n"}, {"fullname": "vendors.forms.ModelEntryForm.declared_fields", "modulename": "vendors.forms", "qualname": "ModelEntryForm.declared_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "vendors.forms.ModelEntryForm.base_fields", "modulename": "vendors.forms", "qualname": "ModelEntryForm.base_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;name&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;description&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;tag&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;visibility&#x27;: &lt;django.forms.fields.TypedChoiceField object&gt;, &#x27;base_image&#x27;: &lt;django.forms.fields.FileField object&gt;}"}, {"fullname": "vendors.forms.ModelVersionForm", "modulename": "vendors.forms", "qualname": "ModelVersionForm", "kind": "class", "doc": "<p>Form for uploading new model versions.</p>\n\n<p>Enables vendors to upload new versions of their models with\nversion-specific metadata and compatibility information.</p>\n", "bases": "django.forms.models.ModelForm"}, {"fullname": "vendors.forms.ModelVersionForm.Meta", "modulename": "vendors.forms", "qualname": "ModelVersionForm.Meta", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "vendors.forms.ModelVersionForm.Meta.model", "modulename": "vendors.forms", "qualname": "ModelVersionForm.Meta.model", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;vendors.models.ModelVersion&#x27;&gt;"}, {"fullname": "vendors.forms.ModelVersionForm.Meta.fields", "modulename": "vendors.forms", "qualname": "ModelVersionForm.Meta.fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;version_name&#x27;, &#x27;file&#x27;, &#x27;compatibility&#x27;, &#x27;description&#x27;]"}, {"fullname": "vendors.forms.ModelVersionForm.media", "modulename": "vendors.forms", "qualname": "ModelVersionForm.media", "kind": "variable", "doc": "<p>Return all media required to render the widgets on this form.</p>\n"}, {"fullname": "vendors.forms.ModelVersionForm.declared_fields", "modulename": "vendors.forms", "qualname": "ModelVersionForm.declared_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "vendors.forms.ModelVersionForm.base_fields", "modulename": "vendors.forms", "qualname": "ModelVersionForm.base_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;version_name&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;file&#x27;: &lt;django.forms.fields.FileField object&gt;, &#x27;compatibility&#x27;: &lt;django.forms.fields.CharField object&gt;, &#x27;description&#x27;: &lt;django.forms.fields.CharField object&gt;}"}, {"fullname": "vendors.migrations", "modulename": "vendors.migrations", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.migrations.0001_initial", "modulename": "vendors.migrations.0001_initial", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.migrations.0001_initial.Migration", "modulename": "vendors.migrations.0001_initial", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from\ndjango.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "vendors.migrations.0001_initial.Migration.initial", "modulename": "vendors.migrations.0001_initial", "qualname": "Migration.initial", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "vendors.migrations.0001_initial.Migration.dependencies", "modulename": "vendors.migrations.0001_initial", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, {"fullname": "vendors.migrations.0001_initial.Migration.operations", "modulename": "vendors.migrations.0001_initial", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;CreateModel  name=&#x27;ModelEntry&#x27;, fields=[(&#x27;model_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;description&#x27;, &lt;django.db.models.fields.TextField&gt;), (&#x27;tag&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;visibility&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;upload_date&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;base_image&#x27;, &lt;django.db.models.fields.files.FileField&gt;)]&gt;, &lt;CreateModel  name=&#x27;Vendor&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.BigAutoField&gt;), (&#x27;userid&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;username&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;email&#x27;, &lt;django.db.models.fields.EmailField&gt;), (&#x27;mobile_no&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;password&#x27;, &lt;django.db.models.fields.CharField&gt;)]&gt;, &lt;CreateModel  name=&#x27;ModelVersion&#x27;, fields=[(&#x27;version_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;version_name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;file&#x27;, &lt;django.db.models.fields.files.FileField&gt;), (&#x27;size&#x27;, &lt;django.db.models.fields.PositiveIntegerField&gt;), (&#x27;compatibility&#x27;, &lt;django.db.models.fields.TextField&gt;), (&#x27;description&#x27;, &lt;django.db.models.fields.TextField&gt;), (&#x27;date_uploaded&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;model_entry&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;)]&gt;, &lt;AddField  model_name=&#x27;modelentry&#x27;, name=&#x27;vendor&#x27;, field=&lt;django.db.models.fields.related.ForeignKey&gt;&gt;]"}, {"fullname": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more", "modulename": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more.Migration", "modulename": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from\ndjango.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more.Migration.dependencies", "modulename": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;vendors&#x27;, &#x27;0001_initial&#x27;)]"}, {"fullname": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more.Migration.operations", "modulename": "vendors.migrations.0002_alter_modelentry_model_id_alter_modelversion_file_and_more", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;modelentry&#x27;, name=&#x27;model_id&#x27;, field=&lt;django.db.models.fields.CharField&gt;&gt;, &lt;AlterField  model_name=&#x27;modelversion&#x27;, name=&#x27;file&#x27;, field=&lt;django.db.models.fields.files.FileField&gt;&gt;, &lt;AlterField  model_name=&#x27;modelversion&#x27;, name=&#x27;version_id&#x27;, field=&lt;django.db.models.fields.CharField&gt;&gt;]"}, {"fullname": "vendors.models", "modulename": "vendors.models", "kind": "module", "doc": "<p>Django models for the vendors application.</p>\n\n<p>This module defines models for managing a marketplace where vendors can upload\nand distribute machine learning models in the federated learning ecosystem.\nIt supports model versioning, file uploads, and access control.</p>\n\n<p>Classes:\n    - Vendor: Model representing vendors who can upload ML models\n    - ModelEntry: Model representing ML model entries with metadata\n    - ModelVersion: Model representing specific versions of ML models</p>\n\n<p>Helper Functions:\n    - base_image_path: Generate file paths for base container images\n    - version_file_path: Generate file paths for model weight files\n    - validate_model_file: Validate uploaded model file extensions</p>\n"}, {"fullname": "vendors.models.Vendor", "modulename": "vendors.models", "qualname": "Vendor", "kind": "class", "doc": "<p>Model representing vendors in the ML model marketplace.</p>\n\n<p>Vendors are users who can upload and manage machine learning models\nin the federated learning marketplace. They have their own accounts\nwith secure password storage.</p>\n\n<p>Attributes:\n    userid (CharField): Unique identifier for the vendor\n    username (CharField): Display name for the vendor\n    email (EmailField): Contact email address\n    mobile_no (CharField): Contact phone number\n    password (CharField): Hashed password for authentication</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "vendors.models.Vendor.userid", "modulename": "vendors.models", "qualname": "Vendor.userid", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.username", "modulename": "vendors.models", "qualname": "Vendor.username", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.email", "modulename": "vendors.models", "qualname": "Vendor.email", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.mobile_no", "modulename": "vendors.models", "qualname": "Vendor.mobile_no", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.password", "modulename": "vendors.models", "qualname": "Vendor.password", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.save", "modulename": "vendors.models", "qualname": "Vendor.save", "kind": "function", "doc": "<p>Override save method to automatically hash passwords.</p>\n\n<p>Ensures that passwords are properly hashed before storage\nif they haven't been hashed already.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.DoesNotExist", "modulename": "vendors.models", "qualname": "Vendor.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "vendors.models.Vendor.MultipleObjectsReturned", "modulename": "vendors.models", "qualname": "Vendor.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "vendors.models.Vendor.id", "modulename": "vendors.models", "qualname": "Vendor.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.objects", "modulename": "vendors.models", "qualname": "Vendor.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.Vendor.modelentry_set", "modulename": "vendors.models", "qualname": "Vendor.modelentry_set", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "vendors.models.base_image_path", "modulename": "vendors.models", "qualname": "base_image_path", "kind": "function", "doc": "<p>Generate file upload path for base container images.</p>\n\n<p>Creates organized directory structure for storing Docker container\nimages (.tar files) uploaded by vendors for their ML models.</p>\n\n<p>Args:\n    instance (ModelEntry): The model entry instance\n    filename (str): Original filename of the uploaded file</p>\n\n<p>Returns:\n    str: Path where the file should be stored</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instance</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.version_file_path", "modulename": "vendors.models", "qualname": "version_file_path", "kind": "function", "doc": "<p>Generate file upload path for model weight files.</p>\n\n<p>Creates organized directory structure for storing ML model weight files\n(.pt, .pth, .onnx, .h5) for different versions of models.</p>\n\n<p>Args:\n    instance (ModelVersion): The model version instance\n    filename (str): Original filename of the uploaded file</p>\n\n<p>Returns:\n    str: Path where the file should be stored</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instance</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.validate_model_file", "modulename": "vendors.models", "qualname": "validate_model_file", "kind": "function", "doc": "<p>Validate uploaded model files by checking file extensions.</p>\n\n<p>Ensures that only supported ML model file formats are uploaded\nto maintain system compatibility and security.</p>\n\n<p>Args:\n    value (File): The uploaded file to validate</p>\n\n<p>Raises:\n    ValidationError: If the file extension is not supported</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry", "modulename": "vendors.models", "qualname": "ModelEntry", "kind": "class", "doc": "<p>Model representing ML model entries in the marketplace.</p>\n\n<p>Each model entry contains metadata about a machine learning model\nthat vendors can upload and share. Models can have multiple versions\nand different visibility settings.</p>\n\n<p>Attributes:\n    model_id (CharField): Unique identifier for the model\n    name (CharField): Human-readable name of the model\n    vendor (ForeignKey): Reference to the vendor who owns this model\n    description (TextField): Detailed description of the model\n    tag (CharField): Category or type tag for the model\n    visibility (CharField): Access control setting (PRIVATE, PUBLIC, RESTRICTED)\n    upload_date (DateTimeField): When the model was first uploaded\n    base_image (FileField): Optional Docker container image for the model</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "vendors.models.ModelEntry.VISIBILITY_CHOICES", "modulename": "vendors.models", "qualname": "ModelEntry.VISIBILITY_CHOICES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;PRIVATE&#x27;, &#x27;Private&#x27;), (&#x27;PUBLIC&#x27;, &#x27;Public&#x27;), (&#x27;RESTRICTED&#x27;, &#x27;Restricted&#x27;)]"}, {"fullname": "vendors.models.ModelEntry.model_id", "modulename": "vendors.models", "qualname": "ModelEntry.model_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.name", "modulename": "vendors.models", "qualname": "ModelEntry.name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.vendor", "modulename": "vendors.models", "qualname": "ModelEntry.vendor", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "vendors.models.ModelEntry.description", "modulename": "vendors.models", "qualname": "ModelEntry.description", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.tag", "modulename": "vendors.models", "qualname": "ModelEntry.tag", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.visibility", "modulename": "vendors.models", "qualname": "ModelEntry.visibility", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.upload_date", "modulename": "vendors.models", "qualname": "ModelEntry.upload_date", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.base_image", "modulename": "vendors.models", "qualname": "ModelEntry.base_image", "kind": "variable", "doc": "<p>The descriptor for the file attribute on the model instance. Return a\nFieldFile when accessed so you can write code like::</p>\n\n<pre><code>&gt;&gt;&gt; from myapp.models import MyModel\n&gt;&gt;&gt; instance = MyModel.objects.get(pk=1)\n&gt;&gt;&gt; instance.file.size\n</code></pre>\n\n<p>Assign a file object on assignment so you can do::</p>\n\n<pre><code>&gt;&gt;&gt; with open('/path/to/hello.world') as f:\n...     instance.file = File(f)\n</code></pre>\n"}, {"fullname": "vendors.models.ModelEntry.DoesNotExist", "modulename": "vendors.models", "qualname": "ModelEntry.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "vendors.models.ModelEntry.MultipleObjectsReturned", "modulename": "vendors.models", "qualname": "ModelEntry.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "vendors.models.ModelEntry.vendor_id", "modulename": "vendors.models", "qualname": "ModelEntry.vendor_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.models.ModelEntry.get_visibility_display", "modulename": "vendors.models", "qualname": "ModelEntry.get_visibility_display", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.get_next_by_upload_date", "modulename": "vendors.models", "qualname": "ModelEntry.get_next_by_upload_date", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.get_previous_by_upload_date", "modulename": "vendors.models", "qualname": "ModelEntry.get_previous_by_upload_date", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.objects", "modulename": "vendors.models", "qualname": "ModelEntry.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelEntry.versions", "modulename": "vendors.models", "qualname": "ModelEntry.versions", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "vendors.models.ModelVersion", "modulename": "vendors.models", "qualname": "ModelVersion", "kind": "class", "doc": "<p>Model representing specific versions of ML models.</p>\n\n<p>Each model entry can have multiple versions, allowing vendors to\niterate and improve their models while maintaining version history.\nEach version contains the actual model weights and metadata.</p>\n\n<p>Attributes:\n    version_id (CharField): Unique identifier for this version\n    model_entry (ForeignKey): Reference to the parent model entry\n    version_name (CharField): Human-readable version name\n    file (FileField): The actual model weight file\n    size (PositiveIntegerField): File size in bytes\n    compatibility (TextField): Compatibility information and requirements\n    description (TextField): Version-specific description and notes\n    date_uploaded (DateTimeField): When this version was uploaded</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "vendors.models.ModelVersion.version_id", "modulename": "vendors.models", "qualname": "ModelVersion.version_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.model_entry", "modulename": "vendors.models", "qualname": "ModelVersion.model_entry", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "vendors.models.ModelVersion.version_name", "modulename": "vendors.models", "qualname": "ModelVersion.version_name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.file", "modulename": "vendors.models", "qualname": "ModelVersion.file", "kind": "variable", "doc": "<p>The descriptor for the file attribute on the model instance. Return a\nFieldFile when accessed so you can write code like::</p>\n\n<pre><code>&gt;&gt;&gt; from myapp.models import MyModel\n&gt;&gt;&gt; instance = MyModel.objects.get(pk=1)\n&gt;&gt;&gt; instance.file.size\n</code></pre>\n\n<p>Assign a file object on assignment so you can do::</p>\n\n<pre><code>&gt;&gt;&gt; with open('/path/to/hello.world') as f:\n...     instance.file = File(f)\n</code></pre>\n"}, {"fullname": "vendors.models.ModelVersion.size", "modulename": "vendors.models", "qualname": "ModelVersion.size", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.compatibility", "modulename": "vendors.models", "qualname": "ModelVersion.compatibility", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.description", "modulename": "vendors.models", "qualname": "ModelVersion.description", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.date_uploaded", "modulename": "vendors.models", "qualname": "ModelVersion.date_uploaded", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.save", "modulename": "vendors.models", "qualname": "ModelVersion.save", "kind": "function", "doc": "<p>Override save method to auto-generate version ID and calculate file size.</p>\n\n<p>Automatically sets the version ID and file size if not already set\nwhen saving a new model version.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.DoesNotExist", "modulename": "vendors.models", "qualname": "ModelVersion.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "vendors.models.ModelVersion.MultipleObjectsReturned", "modulename": "vendors.models", "qualname": "ModelVersion.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "vendors.models.ModelVersion.model_entry_id", "modulename": "vendors.models", "qualname": "ModelVersion.model_entry_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "vendors.models.ModelVersion.get_next_by_date_uploaded", "modulename": "vendors.models", "qualname": "ModelVersion.get_next_by_date_uploaded", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.get_previous_by_date_uploaded", "modulename": "vendors.models", "qualname": "ModelVersion.get_previous_by_date_uploaded", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.models.ModelVersion.objects", "modulename": "vendors.models", "qualname": "ModelVersion.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.serializers", "modulename": "vendors.serializers", "kind": "module", "doc": "<p>Django REST Framework serializers for the vendors application.</p>\n\n<p>This module defines serializers for API endpoints related to vendor\nmanagement and model file handling in the ML marketplace.</p>\n\n<p>Classes:\n    - VendorRegisterSerializer: Serializer for vendor registration API\n    - ModelFileSerializer: Serializer for model file API operations</p>\n"}, {"fullname": "vendors.serializers.VendorRegisterSerializer", "modulename": "vendors.serializers", "qualname": "VendorRegisterSerializer", "kind": "class", "doc": "<p>Serializer for vendor registration through API endpoints.</p>\n\n<p>Handles serialization and validation of vendor registration data\nfor RESTful API interactions.</p>\n", "bases": "rest_framework.serializers.ModelSerializer"}, {"fullname": "vendors.serializers.VendorRegisterSerializer.Meta", "modulename": "vendors.serializers", "qualname": "VendorRegisterSerializer.Meta", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "vendors.serializers.VendorRegisterSerializer.Meta.model", "modulename": "vendors.serializers", "qualname": "VendorRegisterSerializer.Meta.model", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;vendors.models.Vendor&#x27;&gt;"}, {"fullname": "vendors.serializers.VendorRegisterSerializer.Meta.fields", "modulename": "vendors.serializers", "qualname": "VendorRegisterSerializer.Meta.fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;username&#x27;, &#x27;password&#x27;, &#x27;company_name&#x27;)"}, {"fullname": "vendors.serializers.VendorRegisterSerializer.Meta.extra_kwargs", "modulename": "vendors.serializers", "qualname": "VendorRegisterSerializer.Meta.extra_kwargs", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;password&#x27;: {&#x27;write_only&#x27;: True}}"}, {"fullname": "vendors.serializers.VendorRegisterSerializer.create", "modulename": "vendors.serializers", "qualname": "VendorRegisterSerializer.create", "kind": "function", "doc": "<p>Create a new vendor user with validated data.</p>\n\n<p>Args:\n    validated_data (dict): Validated registration data</p>\n\n<p>Returns:\n    Vendor: The created vendor instance</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">validated_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.templatetags", "modulename": "vendors.templatetags", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.templatetags.form_filters", "modulename": "vendors.templatetags.form_filters", "kind": "module", "doc": "<p>Django template filters for form enhancement in the vendors application.</p>\n\n<p>This module provides custom template filters for improving form rendering\nand styling in the vendor marketplace templates.</p>\n\n<p>Filters:\n    - add_class: Adds CSS classes to form fields for consistent styling</p>\n"}, {"fullname": "vendors.templatetags.form_filters.register", "modulename": "vendors.templatetags.form_filters", "qualname": "register", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;django.template.library.Library object&gt;"}, {"fullname": "vendors.templatetags.form_filters.add_class", "modulename": "vendors.templatetags.form_filters", "qualname": "add_class", "kind": "function", "doc": "<p>Add CSS class to a form field widget.</p>\n\n<p>This filter allows templates to add CSS classes to form fields\nfor consistent styling across the vendor interface.</p>\n\n<p>Args:\n    field: The form field to modify\n    css_class (str): CSS class name to add to the field</p>\n\n<p>Returns:\n    Widget with the specified CSS class applied</p>\n\n<p>Usage:\n    {{ form.field|add_class:\"form-control\" }}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">field</span>, </span><span class=\"param\"><span class=\"n\">css_class</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.tests", "modulename": "vendors.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "vendors.tests.VendorTests", "modulename": "vendors.tests", "qualname": "VendorTests", "kind": "class", "doc": "<p>Similar to TransactionTestCase, but use <code>transaction.atomic()</code> to achieve\ntest isolation.</p>\n\n<p>In most situations, TestCase should be preferred to TransactionTestCase as\nit allows faster execution. However, there are some situations where using\nTransactionTestCase might be necessary (e.g. testing some transactional\nbehavior).</p>\n\n<p>On database backends with no transaction support, TestCase behaves as\nTransactionTestCase.</p>\n", "bases": "django.test.testcases.TestCase"}, {"fullname": "vendors.tests.VendorTests.setUp", "modulename": "vendors.tests", "qualname": "VendorTests.setUp", "kind": "function", "doc": "<p>Hook method for setting up the test fixture before exercising it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.tests.VendorTests.test_register_view", "modulename": "vendors.tests", "qualname": "VendorTests.test_register_view", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.tests.VendorTests.test_login_view", "modulename": "vendors.tests", "qualname": "VendorTests.test_login_view", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.tests.VendorTests.test_dashboard_upload_model", "modulename": "vendors.tests", "qualname": "VendorTests.test_dashboard_upload_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.tests.VendorTests.test_api_list_models", "modulename": "vendors.tests", "qualname": "VendorTests.test_api_list_models", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.tests.VendorTests.test_api_get_model", "modulename": "vendors.tests", "qualname": "VendorTests.test_api_get_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.urls", "modulename": "vendors.urls", "kind": "module", "doc": "<p>URL configuration for the vendors application.</p>\n\n<p>This module defines URL patterns for the ML model marketplace, including\nboth web interface views for vendor interactions and REST API endpoints\nfor programmatic access to model data.</p>\n\n<p>Web Interface URLs:\n    - /: Public models listing\n    - /register/: Vendor registration\n    - /login/: Vendor authentication\n    - /dashboard/: Vendor management interface\n    - /upload/: Model upload interface\n    - Various model and version management URLs</p>\n\n<p>API Endpoints:\n    - /models/public/: REST API for public models\n    - /models/filter/: Filtered model search API\n    - /models/model_detail/: Model details API\n    - /models/image_download/: Base image download API\n    - /models/version_download/: Model version file download API</p>\n"}, {"fullname": "vendors.urls.app_name", "modulename": "vendors.urls", "qualname": "app_name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;vendors&#x27;"}, {"fullname": "vendors.urls.urlpatterns", "modulename": "vendors.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;&#x27; [name=&#x27;public_models&#x27;]&gt;, &lt;URLPattern &#x27;register/&#x27; [name=&#x27;vendor_register&#x27;]&gt;, &lt;URLPattern &#x27;login/&#x27; [name=&#x27;vendor_login&#x27;]&gt;, &lt;URLPattern &#x27;logout/&#x27; [name=&#x27;vendor_logout&#x27;]&gt;, &lt;URLPattern &#x27;dashboard/&#x27; [name=&#x27;vendor_dashboard&#x27;]&gt;, &lt;URLPattern &#x27;upload/&#x27; [name=&#x27;vendor_upload_model&#x27;]&gt;, &lt;URLPattern &#x27;dashboard/model/&lt;str:model_id&gt;/&#x27; [name=&#x27;vendor_model_detail&#x27;]&gt;, &lt;URLPattern &#x27;model/&lt;str:model_id&gt;/edit/&#x27; [name=&#x27;edit_model&#x27;]&gt;, &lt;URLPattern &#x27;model/&lt;str:model_id&gt;/delete/&#x27; [name=&#x27;delete_model&#x27;]&gt;, &lt;URLPattern &#x27;model/&lt;str:model_id&gt;/add-version/&#x27; [name=&#x27;add_model_version&#x27;]&gt;, &lt;URLPattern &#x27;version/&lt;str:version_id&gt;/edit/&#x27; [name=&#x27;edit_version&#x27;]&gt;, &lt;URLPattern &#x27;version/&lt;str:version_id&gt;/delete/&#x27; [name=&#x27;delete_version&#x27;]&gt;, &lt;URLPattern &#x27;get-server-files/&#x27; [name=&#x27;get_server_files&#x27;]&gt;, &lt;URLPattern &#x27;models/public/&#x27;&gt;, &lt;URLPattern &#x27;models/filter/&#x27;&gt;, &lt;URLPattern &#x27;models/model_detail/&#x27;&gt;, &lt;URLPattern &#x27;models/image_download/&#x27;&gt;, &lt;URLPattern &#x27;models/version_download/&#x27;&gt;]"}, {"fullname": "vendors.views", "modulename": "vendors.views", "kind": "module", "doc": "<p>Django views for the vendors application.</p>\n\n<p>This module handles web interface and API views for the ML model marketplace\nwhere vendors can register, login, upload models, and manage their offerings.\nIt includes both traditional Django views and REST API endpoints.</p>\n\n<p>Key Features:\n    - Vendor registration and authentication\n    - Model upload and management\n    - Public model browsing\n    - File upload handling for model weights and container images\n    - API endpoints for programmatic access</p>\n\n<p>View Functions:\n    - public_models: Display publicly available models\n    - vendor_register: Handle vendor account creation\n    - vendor_login: Handle vendor authentication\n    - vendor_dashboard: Vendor management interface\n    - Various model management views</p>\n"}, {"fullname": "vendors.views.public_models", "modulename": "vendors.views", "qualname": "public_models", "kind": "function", "doc": "<p>Display a list of publicly available ML models.</p>\n\n<p>Shows all models with PUBLIC visibility that vendors have shared\nin the marketplace. Includes model metadata and available versions.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Rendered template with public models list</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.vendor_register", "modulename": "vendors.views", "qualname": "vendor_register", "kind": "function", "doc": "<p>Handle vendor registration for the marketplace.</p>\n\n<p>Allows new vendors to create accounts with validation for unique\nuser IDs and proper form data.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Registration form or redirect to login on success</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.vendor_login", "modulename": "vendors.views", "qualname": "vendor_login", "kind": "function", "doc": "<p>Handle vendor authentication for marketplace access.</p>\n\n<p>Validates vendor credentials and creates session for authenticated users.</p>\n\n<p>Args:\n    request (HttpRequest): The HTTP request object</p>\n\n<p>Returns:\n    HttpResponse: Login form or redirect to dashboard on success</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.vendor_logout", "modulename": "vendors.views", "qualname": "vendor_logout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.vendor_dashboard", "modulename": "vendors.views", "qualname": "vendor_dashboard", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.upload_model_view", "modulename": "vendors.views", "qualname": "upload_model_view", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.get_server_files", "modulename": "vendors.views", "qualname": "get_server_files", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.vendor_model_detail", "modulename": "vendors.views", "qualname": "vendor_model_detail", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">model_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.edit_model", "modulename": "vendors.views", "qualname": "edit_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">model_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.delete_model", "modulename": "vendors.views", "qualname": "delete_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">model_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.add_model_version", "modulename": "vendors.views", "qualname": "add_model_version", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">model_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.edit_version", "modulename": "vendors.views", "qualname": "edit_version", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">version_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.delete_version", "modulename": "vendors.views", "qualname": "delete_version", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">version_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.HouseHashAuth", "modulename": "vendors.views", "qualname": "HouseHashAuth", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "vendors.views.HouseHashAuth.authenticate", "modulename": "vendors.views", "qualname": "HouseHashAuth.authenticate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.PublicModelListAPI", "modulename": "vendors.views", "qualname": "PublicModelListAPI", "kind": "class", "doc": "<p>Intentionally simple parent class for all views. Only implements\ndispatch-by-method and simple sanity checking.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "vendors.views.PublicModelListAPI.authentication_classes", "modulename": "vendors.views", "qualname": "PublicModelListAPI.authentication_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;vendors.views.HouseHashAuth&#x27;&gt;]"}, {"fullname": "vendors.views.PublicModelListAPI.permission_classes", "modulename": "vendors.views", "qualname": "PublicModelListAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "vendors.views.PublicModelListAPI.get", "modulename": "vendors.views", "qualname": "PublicModelListAPI.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.FilteredPublicModelListAPI", "modulename": "vendors.views", "qualname": "FilteredPublicModelListAPI", "kind": "class", "doc": "<p>Intentionally simple parent class for all views. Only implements\ndispatch-by-method and simple sanity checking.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "vendors.views.FilteredPublicModelListAPI.permission_classes", "modulename": "vendors.views", "qualname": "FilteredPublicModelListAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "vendors.views.FilteredPublicModelListAPI.post", "modulename": "vendors.views", "qualname": "FilteredPublicModelListAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.ModelDetailAPI", "modulename": "vendors.views", "qualname": "ModelDetailAPI", "kind": "class", "doc": "<p>Intentionally simple parent class for all views. Only implements\ndispatch-by-method and simple sanity checking.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "vendors.views.ModelDetailAPI.authentication_classes", "modulename": "vendors.views", "qualname": "ModelDetailAPI.authentication_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;vendors.views.HouseHashAuth&#x27;&gt;]"}, {"fullname": "vendors.views.ModelDetailAPI.permission_classes", "modulename": "vendors.views", "qualname": "ModelDetailAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "vendors.views.ModelDetailAPI.get", "modulename": "vendors.views", "qualname": "ModelDetailAPI.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.DownloadBaseImageAPI", "modulename": "vendors.views", "qualname": "DownloadBaseImageAPI", "kind": "class", "doc": "<p>Intentionally simple parent class for all views. Only implements\ndispatch-by-method and simple sanity checking.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "vendors.views.DownloadBaseImageAPI.authentication_classes", "modulename": "vendors.views", "qualname": "DownloadBaseImageAPI.authentication_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;vendors.views.HouseHashAuth&#x27;&gt;]"}, {"fullname": "vendors.views.DownloadBaseImageAPI.permission_classes", "modulename": "vendors.views", "qualname": "DownloadBaseImageAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "vendors.views.DownloadBaseImageAPI.get", "modulename": "vendors.views", "qualname": "DownloadBaseImageAPI.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "vendors.views.DownloadVersionFileAPI", "modulename": "vendors.views", "qualname": "DownloadVersionFileAPI", "kind": "class", "doc": "<p>Intentionally simple parent class for all views. Only implements\ndispatch-by-method and simple sanity checking.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "vendors.views.DownloadVersionFileAPI.authentication_classes", "modulename": "vendors.views", "qualname": "DownloadVersionFileAPI.authentication_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;vendors.views.HouseHashAuth&#x27;&gt;]"}, {"fullname": "vendors.views.DownloadVersionFileAPI.permission_classes", "modulename": "vendors.views", "qualname": "DownloadVersionFileAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "vendors.views.DownloadVersionFileAPI.get", "modulename": "vendors.views", "qualname": "DownloadVersionFileAPI.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "Redis", "modulename": "Redis", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "manage", "modulename": "manage", "kind": "module", "doc": "<p>Django's command-line utility for administrative tasks.</p>\n"}, {"fullname": "manage.main", "modulename": "manage", "qualname": "main", "kind": "function", "doc": "<p>Run administrative tasks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();