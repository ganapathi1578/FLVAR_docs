window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "agent", "modulename": "agent", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "agent.apps", "modulename": "agent.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "agent.apps.AgentConfig", "modulename": "agent.apps", "qualname": "AgentConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "agent.apps.AgentConfig.default_auto_field", "modulename": "agent.apps", "qualname": "AgentConfig.default_auto_field", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django.db.models.BigAutoField&#x27;"}, {"fullname": "agent.apps.AgentConfig.name", "modulename": "agent.apps", "qualname": "AgentConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;agent&#x27;"}, {"fullname": "agent.config", "modulename": "agent.config", "kind": "module", "doc": "<p>Configuration utilities for agent package.</p>\n\n<p>Functions:\n    load: Loads configuration from arhouse.json.\n    save: Saves configuration to arhouse.json.\n    get_house_id: Retrieves the house_id from configuration.\n    get_secret_key: Retrieves the secret_key from configuration.</p>\n"}, {"fullname": "agent.config.CONF_PATH", "modulename": "agent.config", "qualname": "CONF_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/app/agent/arhouse.json&#x27;"}, {"fullname": "agent.config.load", "modulename": "agent.config", "qualname": "load", "kind": "function", "doc": "<p>Loads the agent configuration from arhouse.json.</p>\n\n<p>Returns:\n    dict: Configuration dictionary, or empty dict if file does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "agent.config.save", "modulename": "agent.config", "qualname": "save", "kind": "function", "doc": "<p>Saves the given configuration dictionary to arhouse.json.</p>\n\n<p>Args:\n    cfg (dict): Configuration dictionary to save.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cfg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "agent.config.get_house_id", "modulename": "agent.config", "qualname": "get_house_id", "kind": "function", "doc": "<p>Retrieves the house_id from the configuration.</p>\n\n<p>Returns:\n    str: The house_id value.\nRaises:\n    KeyError: If 'house_id' is missing in configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "agent.config.get_secret_key", "modulename": "agent.config", "qualname": "get_secret_key", "kind": "function", "doc": "<p>Retrieves the secret_key from the configuration.</p>\n\n<p>Returns:\n    str: The secret_key value.\nRaises:\n    KeyError: If 'secret_key' is missing in configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "agent.register", "modulename": "agent.register", "kind": "module", "doc": "<p>Registration utility for agent. Registers the agent with the central server and saves credentials.</p>\n\n<p>Functions:\n    main: Registers the agent if not already registered, saves credentials to config, and prints status.</p>\n\n<p>Constants:\n    CENTRAL_REG_URL: URL for agent registration API.</p>\n"}, {"fullname": "agent.register.CENTRAL_REG_URL", "modulename": "agent.register", "qualname": "CENTRAL_REG_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://services.iittp.ac.in/var/tunnel/api/register_or_get_id/&#x27;"}, {"fullname": "agent.register.register", "modulename": "agent.register", "qualname": "register", "kind": "function", "doc": "<p>Registers the agent with the central server if not already registered.\nLoads/saves credentials to config file.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "agent.tunnel_agent", "modulename": "agent.tunnel_agent", "kind": "module", "doc": "<p>Tunnel Agent Script</p>\n\n<p>This script connects to a central WebSocket server and proxies incoming HTTP requests\nto a local API server. It handles media streaming support, authentication, error handling,\nand header injection for routing based on a unique <code>house_id</code>.</p>\n\n<p>Used in edge deployments where multiple local instances are exposed via a central server.</p>\n\n<p>Author: YourName</p>\n"}, {"fullname": "agent.tunnel_agent.CENTRAL_WS", "modulename": "agent.tunnel_agent", "qualname": "CENTRAL_WS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ws://10.23.8.207:5090/ws/tunnel/&#x27;"}, {"fullname": "agent.tunnel_agent.get_local_api", "modulename": "agent.tunnel_agent", "qualname": "get_local_api", "kind": "function", "doc": "<p>Returns the local API base URL using internal networking (e.g., Docker).</p>\n\n<p>Returns:\n    str: Local API base URL (usually nginx or reverse proxy).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "agent.tunnel_agent.LOCAL_API", "modulename": "agent.tunnel_agent", "qualname": "LOCAL_API", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://nginx_server:80&#x27;"}, {"fullname": "agent.tunnel_agent.handle_request", "modulename": "agent.tunnel_agent", "qualname": "handle_request", "kind": "function", "doc": "<p>Handles a single HTTP request forwarded from the central server,\nproxies it to the local API, and sends back the response.</p>\n\n<p>Args:\n    frame (dict): The HTTP request frame from the central server.\n    ws (websockets.WebSocketClientProtocol): Active WebSocket connection.\n    house_id (str): Unique identifier for the house/site (used in routing).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frame</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">ws</span><span class=\"p\">:</span> <span class=\"n\">websockets</span><span class=\"o\">.</span><span class=\"n\">legacy</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">WebSocketClientProtocol</span>,</span><span class=\"param\">\t<span class=\"n\">house_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "agent.tunnel_agent.run", "modulename": "agent.tunnel_agent", "qualname": "run", "kind": "function", "doc": "<p>Main loop: Connects to the central WebSocket, authenticates,\nlistens for incoming HTTP request frames, and proxies them locally.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "orchestrator", "modulename": "orchestrator", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.admin", "modulename": "orchestrator.admin", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.admin.ModelContainerAdmin", "modulename": "orchestrator.admin", "qualname": "ModelContainerAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "orchestrator.admin.ModelContainerAdmin.list_display", "modulename": "orchestrator.admin", "qualname": "ModelContainerAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;model_id&#x27;, &#x27;version_id&#x27;, &#x27;container_name&#x27;, &#x27;status&#x27;, &#x27;created_at&#x27;, &#x27;updated_at&#x27;)"}, {"fullname": "orchestrator.admin.ModelContainerAdmin.search_fields", "modulename": "orchestrator.admin", "qualname": "ModelContainerAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;model_id&#x27;, &#x27;version_id&#x27;, &#x27;container_name&#x27;, &#x27;status&#x27;)"}, {"fullname": "orchestrator.admin.ModelContainerAdmin.list_filter", "modulename": "orchestrator.admin", "qualname": "ModelContainerAdmin.list_filter", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;status&#x27;, &#x27;created_at&#x27;, &#x27;updated_at&#x27;)"}, {"fullname": "orchestrator.admin.ModelContainerAdmin.ordering", "modulename": "orchestrator.admin", "qualname": "ModelContainerAdmin.ordering", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;-updated_at&#x27;,)"}, {"fullname": "orchestrator.admin.ModelContainerAdmin.media", "modulename": "orchestrator.admin", "qualname": "ModelContainerAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "orchestrator.apps", "modulename": "orchestrator.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.apps.OrchestratorConfig", "modulename": "orchestrator.apps", "qualname": "OrchestratorConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "orchestrator.apps.OrchestratorConfig.name", "modulename": "orchestrator.apps", "qualname": "OrchestratorConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;orchestrator&#x27;"}, {"fullname": "orchestrator.migrations", "modulename": "orchestrator.migrations", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.migrations.0001_initial", "modulename": "orchestrator.migrations.0001_initial", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.migrations.0001_initial.Migration", "modulename": "orchestrator.migrations.0001_initial", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "orchestrator.migrations.0001_initial.Migration.initial", "modulename": "orchestrator.migrations.0001_initial", "qualname": "Migration.initial", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "orchestrator.migrations.0001_initial.Migration.dependencies", "modulename": "orchestrator.migrations.0001_initial", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, {"fullname": "orchestrator.migrations.0001_initial.Migration.operations", "modulename": "orchestrator.migrations.0001_initial", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;CreateModel  name=&#x27;ModelContainer&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;model_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;version_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;container_name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;status&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;created_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;updated_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;)]&gt;]"}, {"fullname": "orchestrator.models", "modulename": "orchestrator.models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.models.ModelContainer", "modulename": "orchestrator.models", "qualname": "ModelContainer", "kind": "class", "doc": "<p>Represents a deployed model container instance.</p>\n\n<p>Fields:\n    model_id (str):       Unique identifier of the ML model.\n    version_id (str):     Version tag or commit ID for the model.\n    container_name (str): Unique Docker container name running the model.\n    status (str):         Current lifecycle status (e.g., 'running', 'stopped', 'error').\n    created_at (DateTime): Timestamp when the container record was first created.\n    updated_at (DateTime): Timestamp when the container record was last modified.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "orchestrator.models.ModelContainer.model_id", "modulename": "orchestrator.models", "qualname": "ModelContainer.model_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.version_id", "modulename": "orchestrator.models", "qualname": "ModelContainer.version_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.container_name", "modulename": "orchestrator.models", "qualname": "ModelContainer.container_name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.status", "modulename": "orchestrator.models", "qualname": "ModelContainer.status", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.created_at", "modulename": "orchestrator.models", "qualname": "ModelContainer.created_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.updated_at", "modulename": "orchestrator.models", "qualname": "ModelContainer.updated_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.DoesNotExist", "modulename": "orchestrator.models", "qualname": "ModelContainer.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "orchestrator.models.ModelContainer.MultipleObjectsReturned", "modulename": "orchestrator.models", "qualname": "ModelContainer.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "orchestrator.models.ModelContainer.get_next_by_created_at", "modulename": "orchestrator.models", "qualname": "ModelContainer.get_next_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.get_previous_by_created_at", "modulename": "orchestrator.models", "qualname": "ModelContainer.get_previous_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.get_next_by_updated_at", "modulename": "orchestrator.models", "qualname": "ModelContainer.get_next_by_updated_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.get_previous_by_updated_at", "modulename": "orchestrator.models", "qualname": "ModelContainer.get_previous_by_updated_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.id", "modulename": "orchestrator.models", "qualname": "ModelContainer.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.models.ModelContainer.objects", "modulename": "orchestrator.models", "qualname": "ModelContainer.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.serializers", "modulename": "orchestrator.serializers", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.serializers.ModelContainerSerializer", "modulename": "orchestrator.serializers", "qualname": "ModelContainerSerializer", "kind": "class", "doc": "<p>Serializer for ModelContainer instances.</p>\n\n<p>Fields:\n    model_id (str):       Unique identifier of the ML model.\n    version_id (str):     Version tag or commit ID for the model.\n    container_name (str): Unique Docker container name running the model.\n    status (str):         Current lifecycle status (e.g., 'running', 'stopped', 'error').\n    created_at (DateTime): Timestamp when the container record was first created.\n    updated_at (DateTime): Timestamp when the container record was last modified.</p>\n", "bases": "rest_framework.serializers.ModelSerializer"}, {"fullname": "orchestrator.serializers.ModelContainerSerializer.Meta", "modulename": "orchestrator.serializers", "qualname": "ModelContainerSerializer.Meta", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "orchestrator.serializers.ModelContainerSerializer.Meta.model", "modulename": "orchestrator.serializers", "qualname": "ModelContainerSerializer.Meta.model", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;orchestrator.models.ModelContainer&#x27;&gt;"}, {"fullname": "orchestrator.serializers.ModelContainerSerializer.Meta.fields", "modulename": "orchestrator.serializers", "qualname": "ModelContainerSerializer.Meta.fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;model_id&#x27;, &#x27;version_id&#x27;, &#x27;container_name&#x27;, &#x27;status&#x27;, &#x27;created_at&#x27;, &#x27;updated_at&#x27;]"}, {"fullname": "orchestrator.urls", "modulename": "orchestrator.urls", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.urls.urlpatterns", "modulename": "orchestrator.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;pull/&#x27;&gt;, &lt;URLPattern &#x27;start/&#x27;&gt;, &lt;URLPattern &#x27;stop/&#x27;&gt;, &lt;URLPattern &#x27;delete/&#x27;&gt;, &lt;URLPattern &#x27;switch/&#x27;&gt;, &lt;URLPattern &#x27;&#x27;&gt;, &lt;URLPattern &#x27;models/&#x27;&gt;, &lt;URLPattern &#x27;versions/&#x27;&gt;]"}, {"fullname": "orchestrator.utils", "modulename": "orchestrator.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.utils.central", "modulename": "orchestrator.utils.central", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.utils.central.make_headers", "modulename": "orchestrator.utils.central", "qualname": "make_headers", "kind": "function", "doc": "<p>Generate authentication headers for communicating with the central server.</p>\n\n<p>Returns:\n    dict: Dictionary with 'X-House-ID' and 'X-Auth-Hash' headers.</p>\n\n<p>Raises:\n    APIException: If required <code>house_id</code> or <code>secret_key</code> is missing in settings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.utils.central.download_image_tar", "modulename": "orchestrator.utils.central", "qualname": "download_image_tar", "kind": "function", "doc": "<p>Download the .tar image archive for a specific model from the central server.\nIf already downloaded, it reads from local disk.</p>\n\n<p>Args:\n    model_id (str): Unique identifier for the model.</p>\n\n<p>Returns:\n    bytes: The binary content of the .tar file.</p>\n\n<p>Raises:\n    NotFound: If the model is not available on the central server.\n    requests.RequestException: For any HTTP-related errors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.utils.central.download_version_weights", "modulename": "orchestrator.utils.central", "qualname": "download_version_weights", "kind": "function", "doc": "<p>Download version-specific model weights from the central server.</p>\n\n<p>Args:\n    model_id (str): ID of the model.\n    version_id (str): Specific version identifier.</p>\n\n<p>Returns:\n    tuple:\n        - filename (str): The name of the downloaded weights file.\n        - file_content (bytes): Raw binary content of the weights file.</p>\n\n<p>Raises:\n    NotFound: If the requested version is not found.\n    requests.RequestException: For any HTTP-related failures.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_id</span>, </span><span class=\"param\"><span class=\"n\">version_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.utils.docker_manager", "modulename": "orchestrator.utils.docker_manager", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager", "kind": "class", "doc": "<p>A utility class to manage Docker containers and images using the Docker SDK for Python.</p>\n\n<p>Supports loading image tarballs, tagging, running containers,\nstopping and deleting containers, and auto-handling platform-specific Docker sockets.</p>\n"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager.__init__", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager.__init__", "kind": "function", "doc": "<p>Initialize the Docker client depending on the host platform.</p>\n\n<p>Args:\n    network (str): Name of the Docker network to connect containers to.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">network</span></span>)</span>"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager.network", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager.network", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager.load_and_tag", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager.load_and_tag", "kind": "function", "doc": "<p>Load a Docker image from tar bytes and tag it.</p>\n\n<p>Args:\n    tar_bytes (bytes): Byte stream of a Docker image tar archive.\n    model_id (str): Repository name or model identifier.\n    tag (str): Optional tag name (default is \"base\").</p>\n\n<p>Returns:\n    str: Full tag used (e.g., \"model_id:tag\").</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tar_bytes</span>, </span><span class=\"param\"><span class=\"n\">model_id</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">&#39;base&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager.run", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager.run", "kind": "function", "doc": "<p>Run a Docker container with the given tag and name.\nIf a container with the same name exists but is not running, it will be started.</p>\n\n<p>Args:\n    tag (str): Image tag to run.\n    name (str): Name to assign to the container.</p>\n\n<p>Returns:\n    Container: Docker container object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager.stop", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager.stop", "kind": "function", "doc": "<p>Stop a running container by name.</p>\n\n<p>Args:\n    name (str): Container name.</p>\n\n<p>Returns:\n    Container or None: The stopped container object if found, else None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.utils.docker_manager.DockerManager.delete", "modulename": "orchestrator.utils.docker_manager", "qualname": "DockerManager.delete", "kind": "function", "doc": "<p>Forcefully remove a container by name.</p>\n\n<p>Args:\n    name (str): Container name.</p>\n\n<p>Returns:\n    bool: True if deleted, False if not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views", "modulename": "orchestrator.views", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "orchestrator.views.DOCKER", "modulename": "orchestrator.views", "qualname": "DOCKER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;orchestrator.utils.docker_manager.DockerManager object&gt;"}, {"fullname": "orchestrator.views.PullAndStartAPI", "modulename": "orchestrator.views", "qualname": "PullAndStartAPI", "kind": "class", "doc": "<p>Pulls a model\u2019s base Docker image tarball, loads it, tags it, and starts a container.</p>\n\n<p>POST data:\n    {\n        \"model_id\": \"<model identifier>\"\n    }</p>\n\n<p>Returns:\n    201: serialized ModelContainer with status and timestamps.\n    400: if model_id missing (ParseError).\n    500: on unexpected errors.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.PullAndStartAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "PullAndStartAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.PullAndStartAPI.post", "modulename": "orchestrator.views", "qualname": "PullAndStartAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.StartAPI", "modulename": "orchestrator.views", "qualname": "StartAPI", "kind": "class", "doc": "<p>Starts an existing container for the given model.</p>\n\n<p>POST data:\n    {\n        \"model_id\": \"<model identifier>\"\n    }</p>\n\n<p>Returns:\n    200: serialized ModelContainer with new status.\n    400: if model_id missing or container does not exist.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.StartAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "StartAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.StartAPI.post", "modulename": "orchestrator.views", "qualname": "StartAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.StopAPI", "modulename": "orchestrator.views", "qualname": "StopAPI", "kind": "class", "doc": "<p>Stops a running container for the given model.</p>\n\n<p>POST data:\n    {\n        \"model_id\": \"<model identifier>\"\n    }</p>\n\n<p>Returns:\n    200: serialized ModelContainer with updated status.\n    400: if model_id missing or container does not exist.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.StopAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "StopAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.StopAPI.post", "modulename": "orchestrator.views", "qualname": "StopAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.StopAPI.dispatch", "modulename": "orchestrator.views", "qualname": "StopAPI.dispatch", "kind": "function", "doc": "<p><code>.dispatch()</code> is pretty much the same as Django's regular dispatch,\nbut with extra hooks for startup, finalize, and exception handling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.DeleteAPI", "modulename": "orchestrator.views", "qualname": "DeleteAPI", "kind": "class", "doc": "<p>Deletes a container record and removes the Docker container.</p>\n\n<p>DELETE data:\n    {\n        \"model_id\": \"<model identifier>\"\n    }</p>\n\n<p>Returns:\n    204: No content on successful deletion.\n    400: if model_id missing.\n    404: if container does not exist.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.DeleteAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "DeleteAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.DeleteAPI.delete", "modulename": "orchestrator.views", "qualname": "DeleteAPI.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.DeleteAPI.dispatch", "modulename": "orchestrator.views", "qualname": "DeleteAPI.dispatch", "kind": "function", "doc": "<p><code>.dispatch()</code> is pretty much the same as Django's regular dispatch,\nbut with extra hooks for startup, finalize, and exception handling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.SwitchVersionAPI", "modulename": "orchestrator.views", "qualname": "SwitchVersionAPI", "kind": "class", "doc": "<p>Switches a container to a different model version:</p>\n\n<ul>\n<li>Pulls weights if version not present.</li>\n<li>Instructs container to update its active version.</li>\n</ul>\n\n<p>POST data:\n    {\n        \"model_id\":   \"<model identifier>\",\n        \"version_id\": \"<new version identifier>\"\n    }</p>\n\n<p>Returns:\n    200: serialized ModelContainer with new version and status.\n    400: if missing parameters.\n    500: on unexpected errors.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.SwitchVersionAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "SwitchVersionAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.SwitchVersionAPI.post", "modulename": "orchestrator.views", "qualname": "SwitchVersionAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.ListAPI", "modulename": "orchestrator.views", "qualname": "ListAPI", "kind": "class", "doc": "<p>Lists all ModelContainer records.</p>\n\n<p>GET:\n    No input.</p>\n\n<p>Returns:\n    200: JSON array of all containers.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.ListAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "ListAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.ListAPI.get", "modulename": "orchestrator.views", "qualname": "ListAPI.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.ListAPI.dispatch", "modulename": "orchestrator.views", "qualname": "ListAPI.dispatch", "kind": "function", "doc": "<p><code>.dispatch()</code> is pretty much the same as Django's regular dispatch,\nbut with extra hooks for startup, finalize, and exception handling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.ModelListByIdsAPI", "modulename": "orchestrator.views", "qualname": "ModelListByIdsAPI", "kind": "class", "doc": "<p>Fetches marketplace entries for models you own, merging with local status.</p>\n\n<p>POST data:\n    None in request body.</p>\n\n<p>Process:</p>\n\n<ol>\n<li>Collects all local ModelContainer.model_id values.</li>\n<li>Calls central /filter/ API with owned IDs.</li>\n<li>Merges each returned model\u2019s data with local <code>status</code> and <code>created_at</code>.</li>\n</ol>\n\n<p>Returns:\n    200: {\"models\": [ ...merged model objects... ]}\n    500: on errors contacting central or config issues.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.ModelListByIdsAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "ModelListByIdsAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.ModelListByIdsAPI.post", "modulename": "orchestrator.views", "qualname": "ModelListByIdsAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.ModelListByIdsAPI.dispatch", "modulename": "orchestrator.views", "qualname": "ModelListByIdsAPI.dispatch", "kind": "function", "doc": "<p><code>.dispatch()</code> is pretty much the same as Django's regular dispatch,\nbut with extra hooks for startup, finalize, and exception handling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.FilteredModelDetailWithContainerInfoAPI", "modulename": "orchestrator.views", "qualname": "FilteredModelDetailWithContainerInfoAPI", "kind": "class", "doc": "<p>Retrieves detailed model info from central marketplace, filters to versions\npresent in the local container, and annotates with the current deployed version.</p>\n\n<p>POST data:\n    {\n        \"model_id\": \"<model identifier>\"\n    }</p>\n\n<p>Returns:\n    200: filtered model data with 'versions' list and 'current_version'.\n    400: if model_id missing.\n    500: on central/container errors.</p>\n", "bases": "rest_framework.views.APIView"}, {"fullname": "orchestrator.views.FilteredModelDetailWithContainerInfoAPI.permission_classes", "modulename": "orchestrator.views", "qualname": "FilteredModelDetailWithContainerInfoAPI.permission_classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;rest_framework.permissions.AllowAny&#x27;&gt;]"}, {"fullname": "orchestrator.views.FilteredModelDetailWithContainerInfoAPI.post", "modulename": "orchestrator.views", "qualname": "FilteredModelDetailWithContainerInfoAPI.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "orchestrator.views.FilteredModelDetailWithContainerInfoAPI.dispatch", "modulename": "orchestrator.views", "qualname": "FilteredModelDetailWithContainerInfoAPI.dispatch", "kind": "function", "doc": "<p><code>.dispatch()</code> is pretty much the same as Django's regular dispatch,\nbut with extra hooks for startup, finalize, and exception handling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "video_streaming", "modulename": "video_streaming", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "video_streaming.asgi", "modulename": "video_streaming.asgi", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "video_streaming.asgi.application", "modulename": "video_streaming.asgi", "qualname": "application", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;django.core.handlers.asgi.ASGIHandler object&gt;"}, {"fullname": "video_streaming.middleware", "modulename": "video_streaming.middleware", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "video_streaming.middleware.ForceAsiaKolkataTimezoneMiddleware", "modulename": "video_streaming.middleware", "qualname": "ForceAsiaKolkataTimezoneMiddleware", "kind": "class", "doc": "<p>Middleware that forces Django\u2019s active timezone to Asia/Kolkata\nfor the duration of each request.</p>\n\n<p>Behavior:\n    - On request start: activates the 'Asia/Kolkata' timezone.\n    - On request end: deactivates the timezone, restoring the default.</p>\n\n<p>Use case:\n    Ensures all date/time operations within views and templates\n    use IST regardless of server default.</p>\n"}, {"fullname": "video_streaming.middleware.ForceAsiaKolkataTimezoneMiddleware.__init__", "modulename": "video_streaming.middleware", "qualname": "ForceAsiaKolkataTimezoneMiddleware.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">get_response</span></span>)</span>"}, {"fullname": "video_streaming.middleware.ForceAsiaKolkataTimezoneMiddleware.get_response", "modulename": "video_streaming.middleware", "qualname": "ForceAsiaKolkataTimezoneMiddleware.get_response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "video_streaming.middleware.ScriptNameMiddleware", "modulename": "video_streaming.middleware", "qualname": "ScriptNameMiddleware", "kind": "class", "doc": "<p>Middleware that supports prefixing all URL paths by an X-Script-Name header.</p>\n\n<p>Purpose:\n    - Reads HTTP_X_SCRIPT_NAME from incoming request headers.\n    - If present, sets request.META['SCRIPT_NAME'] accordingly.\n    - Strips the prefix from request.path_info so URL resolving works.\n    - Adjusts request.path to include the prefix for URL generation.</p>\n\n<p>Use case:\n    Deploying Django under a subpath (e.g., behind a reverse proxy\n    where the app lives at /myapp/ instead of root).</p>\n"}, {"fullname": "video_streaming.middleware.ScriptNameMiddleware.__init__", "modulename": "video_streaming.middleware", "qualname": "ScriptNameMiddleware.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">get_response</span></span>)</span>"}, {"fullname": "video_streaming.middleware.ScriptNameMiddleware.get_response", "modulename": "video_streaming.middleware", "qualname": "ScriptNameMiddleware.get_response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "video_streaming.settings", "modulename": "video_streaming.settings", "kind": "module", "doc": "<p>Django settings for video_streaming project.</p>\n\n<p>This configuration:</p>\n\n<p>\u2022 Defines project base directory and secret key.\n  \u2022 Enables DEBUG mode and sets ALLOWED_HOSTS/CSRF trusted origins.\n  \u2022 Registers installed apps (streams, trainingspace, orchestrator, DRF).\n  \u2022 Configures middleware, including forced IST timezone.\n  \u2022 Sets up URL routing, templates, and WSGI application.\n  \u2022 Configures PostgreSQL as the default database (matching Docker compose).\n  \u2022 Simplifies password validation for dev.\n  \u2022 Uses Asia/Kolkata as the active timezone.\n  \u2022 Defines static and media file locations (served by Django in DEBUG).\n  \u2022 Loads central\u2011service credentials (house_id, secret_key, base_url).</p>\n"}, {"fullname": "video_streaming.settings.BASE_DIR", "modulename": "video_streaming.settings", "qualname": "BASE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/app&#x27;)"}, {"fullname": "video_streaming.settings.SECRET_KEY", "modulename": "video_streaming.settings", "qualname": "SECRET_KEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;replace-this-with-a-secure-key-in-prod&#x27;"}, {"fullname": "video_streaming.settings.DEBUG", "modulename": "video_streaming.settings", "qualname": "DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "video_streaming.settings.ALLOWED_HOSTS", "modulename": "video_streaming.settings", "qualname": "ALLOWED_HOSTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;*&#x27;]"}, {"fullname": "video_streaming.settings.CSRF_TRUSTED_ORIGINS", "modulename": "video_streaming.settings", "qualname": "CSRF_TRUSTED_ORIGINS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;http://localhost:8000&#x27;, &#x27;http://127.0.0.1:4000&#x27;, &#x27;http://127.0.0.1:5090&#x27;, &#x27;http://10.23.8.207:5090&#x27;, &#x27;https://services.iittp.ac.in&#x27;]"}, {"fullname": "video_streaming.settings.INSTALLED_APPS", "modulename": "video_streaming.settings", "qualname": "INSTALLED_APPS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;django.contrib.admin&#x27;, &#x27;django.contrib.auth&#x27;, &#x27;django.contrib.contenttypes&#x27;, &#x27;django.contrib.sessions&#x27;, &#x27;django.contrib.messages&#x27;, &#x27;django.contrib.staticfiles&#x27;, &#x27;streams&#x27;, &#x27;trainingspace&#x27;, &#x27;orchestrator&#x27;, &#x27;rest_framework&#x27;, &#x27;agent&#x27;]"}, {"fullname": "video_streaming.settings.CSRF_COOKIE_SECURE", "modulename": "video_streaming.settings", "qualname": "CSRF_COOKIE_SECURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, {"fullname": "video_streaming.settings.SESSION_COOKIE_SECURE", "modulename": "video_streaming.settings", "qualname": "SESSION_COOKIE_SECURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, {"fullname": "video_streaming.settings.MIDDLEWARE", "modulename": "video_streaming.settings", "qualname": "MIDDLEWARE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;django.middleware.security.SecurityMiddleware&#x27;, &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;, &#x27;django.middleware.common.CommonMiddleware&#x27;, &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;, &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;, &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;, &#x27;video_streaming.middleware.ForceAsiaKolkataTimezoneMiddleware&#x27;]"}, {"fullname": "video_streaming.settings.ROOT_URLCONF", "modulename": "video_streaming.settings", "qualname": "ROOT_URLCONF", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;video_streaming.urls&#x27;"}, {"fullname": "video_streaming.settings.TEMPLATES", "modulename": "video_streaming.settings", "qualname": "TEMPLATES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[{&#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;, &#x27;DIRS&#x27;: [], &#x27;APP_DIRS&#x27;: True, &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;, &#x27;django.template.context_processors.request&#x27;, &#x27;django.contrib.auth.context_processors.auth&#x27;, &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]"}, {"fullname": "video_streaming.settings.WSGI_APPLICATION", "modulename": "video_streaming.settings", "qualname": "WSGI_APPLICATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;video_streaming.wsgi.application&#x27;"}, {"fullname": "video_streaming.settings.DATABASES", "modulename": "video_streaming.settings", "qualname": "DATABASES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;default&#x27;: {&#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;, &#x27;NAME&#x27;: &#x27;your_db_name&#x27;, &#x27;USER&#x27;: &#x27;your_db_user&#x27;, &#x27;PASSWORD&#x27;: &#x27;your_db_password&#x27;, &#x27;HOST&#x27;: &#x27;db&#x27;, &#x27;PORT&#x27;: &#x27;5432&#x27;, &#x27;ATOMIC_REQUESTS&#x27;: False, &#x27;AUTOCOMMIT&#x27;: True, &#x27;CONN_MAX_AGE&#x27;: 0, &#x27;OPTIONS&#x27;: {}, &#x27;TIME_ZONE&#x27;: None, &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None, &#x27;COLLATION&#x27;: None, &#x27;MIGRATE&#x27;: True, &#x27;MIRROR&#x27;: None, &#x27;NAME&#x27;: None}}}"}, {"fullname": "video_streaming.settings.AUTH_PASSWORD_VALIDATORS", "modulename": "video_streaming.settings", "qualname": "AUTH_PASSWORD_VALIDATORS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, {"fullname": "video_streaming.settings.LANGUAGE_CODE", "modulename": "video_streaming.settings", "qualname": "LANGUAGE_CODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;en-us&#x27;"}, {"fullname": "video_streaming.settings.TIME_ZONE", "modulename": "video_streaming.settings", "qualname": "TIME_ZONE", "kind": "variable", "doc": "<p></p>\n", "default_value": "$TZ"}, {"fullname": "video_streaming.settings.USE_TZ", "modulename": "video_streaming.settings", "qualname": "USE_TZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "video_streaming.settings.STATIC_URL", "modulename": "video_streaming.settings", "qualname": "STATIC_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/static/&#x27;"}, {"fullname": "video_streaming.settings.STATIC_ROOT", "modulename": "video_streaming.settings", "qualname": "STATIC_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/app/static&#x27;"}, {"fullname": "video_streaming.settings.MEDIA_ROOT", "modulename": "video_streaming.settings", "qualname": "MEDIA_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/app/media&#x27;"}, {"fullname": "video_streaming.settings.MEDIA_URL", "modulename": "video_streaming.settings", "qualname": "MEDIA_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/media/&#x27;"}, {"fullname": "video_streaming.settings.DEFAULT_AUTO_FIELD", "modulename": "video_streaming.settings", "qualname": "DEFAULT_AUTO_FIELD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django.db.models.BigAutoField&#x27;"}, {"fullname": "video_streaming.settings.CENTRAL", "modulename": "video_streaming.settings", "qualname": "CENTRAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;house_id&#x27;: &#x27;YLML7Y&#x27;, &#x27;secret_key&#x27;: &#x27;5ad760cde123626348a54a826e820ea1da33114166b23e1f1c4463e261d2976d&#x27;, &#x27;base_url&#x27;: &#x27;https://services.iittp.ac.in/var/vendors/models&#x27;}"}, {"fullname": "video_streaming.urls", "modulename": "video_streaming.urls", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "video_streaming.urls.urlpatterns", "modulename": "video_streaming.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLResolver &lt;decorator_include.DecoratedPatterns object&gt; (admin:admin) &#x27;admins/&#x27;&gt;, &lt;URLResolver &lt;module &#x27;streams.urls&#x27; from &#x27;/app/streams/urls.py&#x27;&gt; (None:None) &#x27;&#x27;&gt;, &lt;URLResolver &lt;module &#x27;trainingspace.urls&#x27; from &#x27;/app/trainingspace/urls.py&#x27;&gt; (None:None) &#x27;trainingspace/&#x27;&gt;, &lt;URLResolver &lt;module &#x27;orchestrator.urls&#x27; from &#x27;/app/orchestrator/urls.py&#x27;&gt; (None:None) &#x27;containers/&#x27;&gt;, &lt;URLPattern &#x27;^media/(?P&lt;path&gt;.*)$&#x27;&gt;, &lt;URLPattern &#x27;^static/(?P&lt;path&gt;.*)$&#x27;&gt;]"}, {"fullname": "video_streaming.wsgi", "modulename": "video_streaming.wsgi", "kind": "module", "doc": "<p>WSGI config for video_streaming project.</p>\n\n<p>It exposes the WSGI callable as a module-level variable named <code>application</code>.</p>\n\n<p>For more information on this file, see\n<a href=\"https://docs.djangoproject.com/en/3.0/howto/deployment/wsgi/\">https://docs.djangoproject.com/en/3.0/howto/deployment/wsgi/</a></p>\n"}, {"fullname": "video_streaming.wsgi.PrefixMiddleware", "modulename": "video_streaming.wsgi", "qualname": "PrefixMiddleware", "kind": "class", "doc": "<p>WSGI middleware that applies an HTTP_X_SCRIPT_NAME prefix to all incoming requests.</p>\n\n<p>Purpose:\n    - Reads 'HTTP_X_SCRIPT_NAME' from the WSGI environ (set by a reverse proxy).\n    - If present, sets environ['SCRIPT_NAME'] to that prefix.\n    - Strips the same prefix from environ['PATH_INFO'] to allow Django URL resolving.\n    - Leaves request routing intact while enabling deployment under a subpath.</p>\n\n<p>Args:\n    app (callable): the downstream WSGI application (usually Django\u2019s).</p>\n\n<p>Returns:\n    A WSGI-compatible response, with PATH_INFO adjusted if a SCRIPT_NAME prefix was provided.</p>\n"}, {"fullname": "video_streaming.wsgi.PrefixMiddleware.__init__", "modulename": "video_streaming.wsgi", "qualname": "PrefixMiddleware.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">app</span></span>)</span>"}, {"fullname": "video_streaming.wsgi.PrefixMiddleware.app", "modulename": "video_streaming.wsgi", "qualname": "PrefixMiddleware.app", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "video_streaming.wsgi.application", "modulename": "video_streaming.wsgi", "qualname": "application", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;video_streaming.wsgi.PrefixMiddleware object&gt;"}, {"fullname": "streams", "modulename": "streams", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.admin", "modulename": "streams.admin", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.admin.APIKeyAdmin", "modulename": "streams.admin", "qualname": "APIKeyAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.APIKeyAdmin.list_display", "modulename": "streams.admin", "qualname": "APIKeyAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;user&#x27;, &#x27;key&#x27;, &#x27;created_at&#x27;)"}, {"fullname": "streams.admin.APIKeyAdmin.search_fields", "modulename": "streams.admin", "qualname": "APIKeyAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;user__username&#x27;, &#x27;key&#x27;)"}, {"fullname": "streams.admin.APIKeyAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "APIKeyAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;created_at&#x27;,)"}, {"fullname": "streams.admin.APIKeyAdmin.media", "modulename": "streams.admin", "qualname": "APIKeyAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.FeedbackAdmin", "modulename": "streams.admin", "qualname": "FeedbackAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.FeedbackAdmin.list_display", "modulename": "streams.admin", "qualname": "FeedbackAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;unique_id&#x27;, &#x27;user_id&#x27;, &#x27;feedback_date&#x27;, &#x27;is_processed&#x27;, &#x27;trimmed_video_link&#x27;)"}, {"fullname": "streams.admin.FeedbackAdmin.list_filter", "modulename": "streams.admin", "qualname": "FeedbackAdmin.list_filter", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;is_processed&#x27;, &#x27;feedback_date&#x27;)"}, {"fullname": "streams.admin.FeedbackAdmin.search_fields", "modulename": "streams.admin", "qualname": "FeedbackAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;unique_id&#x27;, &#x27;user_id&#x27;, &#x27;feedback_text&#x27;)"}, {"fullname": "streams.admin.FeedbackAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "FeedbackAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;feedback_date&#x27;,)"}, {"fullname": "streams.admin.FeedbackAdmin.fieldsets", "modulename": "streams.admin", "qualname": "FeedbackAdmin.fieldsets", "kind": "variable", "doc": "<p></p>\n", "default_value": "((None, {&#x27;fields&#x27;: (&#x27;unique_id&#x27;, &#x27;user_id&#x27;, &#x27;feedback_text&#x27;, &#x27;video_url&#x27;, &#x27;trimmed_video&#x27;, &#x27;start_time&#x27;, &#x27;end_time&#x27;, &#x27;feedback_date&#x27;, &#x27;is_processed&#x27;)}),)"}, {"fullname": "streams.admin.FeedbackAdmin.trimmed_video_link", "modulename": "streams.admin", "qualname": "FeedbackAdmin.trimmed_video_link", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.admin.FeedbackAdmin.media", "modulename": "streams.admin", "qualname": "FeedbackAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.CameraAdmin", "modulename": "streams.admin", "qualname": "CameraAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.CameraAdmin.list_display", "modulename": "streams.admin", "qualname": "CameraAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;name&#x27;, &#x27;mac_id&#x27;, &#x27;source&#x27;, &#x27;is_turned_on&#x27;, &#x27;created_at&#x27;)"}, {"fullname": "streams.admin.CameraAdmin.list_filter", "modulename": "streams.admin", "qualname": "CameraAdmin.list_filter", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;is_turned_on&#x27;, &#x27;created_at&#x27;)"}, {"fullname": "streams.admin.CameraAdmin.search_fields", "modulename": "streams.admin", "qualname": "CameraAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;name&#x27;, &#x27;mac_id&#x27;, &#x27;source&#x27;)"}, {"fullname": "streams.admin.CameraAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "CameraAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;mac_id&#x27;, &#x27;created_at&#x27;)"}, {"fullname": "streams.admin.CameraAdmin.media", "modulename": "streams.admin", "qualname": "CameraAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.PersonAdmin", "modulename": "streams.admin", "qualname": "PersonAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.PersonAdmin.list_display", "modulename": "streams.admin", "qualname": "PersonAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;name&#x27;, &#x27;added_at&#x27;)"}, {"fullname": "streams.admin.PersonAdmin.search_fields", "modulename": "streams.admin", "qualname": "PersonAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;name&#x27;,)"}, {"fullname": "streams.admin.PersonAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "PersonAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;added_at&#x27;,)"}, {"fullname": "streams.admin.PersonAdmin.media", "modulename": "streams.admin", "qualname": "PersonAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.ActionAdmin", "modulename": "streams.admin", "qualname": "ActionAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.ActionAdmin.list_display", "modulename": "streams.admin", "qualname": "ActionAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;name&#x27;, &#x27;added_at&#x27;)"}, {"fullname": "streams.admin.ActionAdmin.search_fields", "modulename": "streams.admin", "qualname": "ActionAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;name&#x27;,)"}, {"fullname": "streams.admin.ActionAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "ActionAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;added_at&#x27;,)"}, {"fullname": "streams.admin.ActionAdmin.media", "modulename": "streams.admin", "qualname": "ActionAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.SegmentActionLogAdmin", "modulename": "streams.admin", "qualname": "SegmentActionLogAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.SegmentActionLogAdmin.list_display", "modulename": "streams.admin", "qualname": "SegmentActionLogAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;timestamp&#x27;, &#x27;date&#x27;, &#x27;camera&#x27;, &#x27;person&#x27;, &#x27;action&#x27;, &#x27;is_trigger&#x27;)"}, {"fullname": "streams.admin.SegmentActionLogAdmin.list_filter", "modulename": "streams.admin", "qualname": "SegmentActionLogAdmin.list_filter", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;is_trigger&#x27;, &#x27;date&#x27;, &#x27;camera&#x27;, &#x27;action&#x27;, &#x27;person&#x27;)"}, {"fullname": "streams.admin.SegmentActionLogAdmin.search_fields", "modulename": "streams.admin", "qualname": "SegmentActionLogAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;camera__name&#x27;, &#x27;camera__mac_id&#x27;, &#x27;person__name&#x27;, &#x27;action__name&#x27;)"}, {"fullname": "streams.admin.SegmentActionLogAdmin.media", "modulename": "streams.admin", "qualname": "SegmentActionLogAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.TriggerAdmin", "modulename": "streams.admin", "qualname": "TriggerAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.TriggerAdmin.list_display", "modulename": "streams.admin", "qualname": "TriggerAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;trigger_id&#x27;, &#x27;user&#x27;, &#x27;trigger_text_summary&#x27;, &#x27;is_active&#x27;, &#x27;is_valid&#x27;, &#x27;camera_id&#x27;, &#x27;camera_name&#x27;, &#x27;person&#x27;, &#x27;action&#x27;, &#x27;datetime_added&#x27;)"}, {"fullname": "streams.admin.TriggerAdmin.list_filter", "modulename": "streams.admin", "qualname": "TriggerAdmin.list_filter", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;is_active&#x27;, &#x27;is_valid&#x27;, &#x27;datetime_added&#x27;)"}, {"fullname": "streams.admin.TriggerAdmin.search_fields", "modulename": "streams.admin", "qualname": "TriggerAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;trigger_id&#x27;, &#x27;trigger_text&#x27;, &#x27;user__username&#x27;)"}, {"fullname": "streams.admin.TriggerAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "TriggerAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;trigger_id&#x27;, &#x27;datetime_added&#x27;, &#x27;camera_id&#x27;, &#x27;camera_name&#x27;, &#x27;person&#x27;, &#x27;action&#x27;, &#x27;is_valid&#x27;)"}, {"fullname": "streams.admin.TriggerAdmin.fieldsets", "modulename": "streams.admin", "qualname": "TriggerAdmin.fieldsets", "kind": "variable", "doc": "<p></p>\n", "default_value": "((None, {&#x27;fields&#x27;: (&#x27;trigger_id&#x27;, &#x27;user&#x27;, &#x27;trigger_text&#x27;, &#x27;is_active&#x27;, &#x27;is_valid&#x27;, &#x27;datetime_added&#x27;)}), (&#x27;Extracted Data&#x27;, {&#x27;fields&#x27;: (&#x27;camera_id&#x27;, &#x27;camera_name&#x27;, &#x27;person&#x27;, &#x27;action&#x27;)}))"}, {"fullname": "streams.admin.TriggerAdmin.trigger_text_summary", "modulename": "streams.admin", "qualname": "TriggerAdmin.trigger_text_summary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.admin.TriggerAdmin.media", "modulename": "streams.admin", "qualname": "TriggerAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.TriggerStatusLogAdmin", "modulename": "streams.admin", "qualname": "TriggerStatusLogAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.TriggerStatusLogAdmin.list_display", "modulename": "streams.admin", "qualname": "TriggerStatusLogAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;trigger&#x27;, &#x27;new_status&#x27;, &#x27;changed_at&#x27;)"}, {"fullname": "streams.admin.TriggerStatusLogAdmin.list_filter", "modulename": "streams.admin", "qualname": "TriggerStatusLogAdmin.list_filter", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;new_status&#x27;, &#x27;changed_at&#x27;)"}, {"fullname": "streams.admin.TriggerStatusLogAdmin.readonly_fields", "modulename": "streams.admin", "qualname": "TriggerStatusLogAdmin.readonly_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;changed_at&#x27;,)"}, {"fullname": "streams.admin.TriggerStatusLogAdmin.search_fields", "modulename": "streams.admin", "qualname": "TriggerStatusLogAdmin.search_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;trigger__trigger_id&#x27;,)"}, {"fullname": "streams.admin.TriggerStatusLogAdmin.media", "modulename": "streams.admin", "qualname": "TriggerStatusLogAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.admin.ModelRegistryAdmin", "modulename": "streams.admin", "qualname": "ModelRegistryAdmin", "kind": "class", "doc": "<p>Encapsulate all admin options and functionality for a given model.</p>\n", "bases": "django.contrib.admin.options.ModelAdmin"}, {"fullname": "streams.admin.ModelRegistryAdmin.list_display", "modulename": "streams.admin", "qualname": "ModelRegistryAdmin.list_display", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;model_name&#x27;, &#x27;status&#x27;)"}, {"fullname": "streams.admin.ModelRegistryAdmin.list_editable", "modulename": "streams.admin", "qualname": "ModelRegistryAdmin.list_editable", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;status&#x27;,)"}, {"fullname": "streams.admin.ModelRegistryAdmin.media", "modulename": "streams.admin", "qualname": "ModelRegistryAdmin.media", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.apps", "modulename": "streams.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.apps.StreamsConfig", "modulename": "streams.apps", "qualname": "StreamsConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "streams.apps.StreamsConfig.name", "modulename": "streams.apps", "qualname": "StreamsConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;streams&#x27;"}, {"fullname": "streams.decorators", "modulename": "streams.decorators", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.decorators.require_api_key", "modulename": "streams.decorators", "qualname": "require_api_key", "kind": "function", "doc": "<p>Decorator to require a valid API key in the Authorization header.</p>\n\n<p>The expected header format is:\n    Authorization: Api-Key <your-api-key></p>\n\n<p>If the key is valid, it injects the corresponding user into <code>request.user</code>.</p>\n\n<p>Returns:\n    - 401 if the Authorization header is missing or malformed\n    - 403 if the API key is invalid\n    - Proceeds to the wrapped view if authentication succeeds</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">view_func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.migrations", "modulename": "streams.migrations", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0001_initial", "modulename": "streams.migrations.0001_initial", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0001_initial.Migration", "modulename": "streams.migrations.0001_initial", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0001_initial.Migration.initial", "modulename": "streams.migrations.0001_initial", "qualname": "Migration.initial", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "streams.migrations.0001_initial.Migration.dependencies", "modulename": "streams.migrations.0001_initial", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;auth&#x27;, &#x27;__first__&#x27;)]"}, {"fullname": "streams.migrations.0001_initial.Migration.operations", "modulename": "streams.migrations.0001_initial", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;CreateModel  name=&#x27;Action&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;added_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;)]&gt;, &lt;CreateModel  name=&#x27;Camera&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;source&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;mac_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;is_turned_on&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;created_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;)]&gt;, &lt;CreateModel  name=&#x27;Feedback&#x27;, fields=[(&#x27;unique_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;user_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;feedback_text&#x27;, &lt;django.db.models.fields.TextField&gt;), (&#x27;video_url&#x27;, &lt;django.db.models.fields.URLField&gt;), (&#x27;trimmed_video&#x27;, &lt;django.db.models.fields.files.FileField&gt;), (&#x27;start_time&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;end_time&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;feedback_date&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;is_processed&#x27;, &lt;django.db.models.fields.BooleanField&gt;)]&gt;, &lt;CreateModel  name=&#x27;ModelRegistry&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;model_name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;status&#x27;, &lt;django.db.models.fields.BooleanField&gt;)]&gt;, &lt;CreateModel  name=&#x27;Person&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;added_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;)]&gt;, &lt;CreateModel  name=&#x27;Trigger&#x27;, fields=[(&#x27;trigger_id&#x27;, &lt;django.db.models.fields.UUIDField&gt;), (&#x27;trigger_text&#x27;, &lt;django.db.models.fields.TextField&gt;), (&#x27;datetime_added&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;is_active&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;is_valid&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;camera_id&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;camera_name&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;person&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;action&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;user&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;)]&gt;, &lt;CreateModel  name=&#x27;TriggerStatusLog&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;changed_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;new_status&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;trigger&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;)]&gt;, &lt;CreateModel  name=&#x27;SegmentActionLog&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;timestamp&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;date&#x27;, &lt;django.db.models.fields.DateField&gt;), (&#x27;is_trigger&#x27;, &lt;django.db.models.fields.BooleanField&gt;), (&#x27;action&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;), (&#x27;camera&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;), (&#x27;person&#x27;, &lt;django.db.models.fields.related.ForeignKey&gt;)]&gt;, &lt;CreateModel  name=&#x27;APIKey&#x27;, fields=[(&#x27;id&#x27;, &lt;django.db.models.fields.AutoField&gt;), (&#x27;key&#x27;, &lt;django.db.models.fields.CharField&gt;), (&#x27;created_at&#x27;, &lt;django.db.models.fields.DateTimeField&gt;), (&#x27;user&#x27;, &lt;django.db.models.fields.related.OneToOneField&gt;)]&gt;]"}, {"fullname": "streams.migrations.0002_auto_20250703_1117", "modulename": "streams.migrations.0002_auto_20250703_1117", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0002_auto_20250703_1117.Migration", "modulename": "streams.migrations.0002_auto_20250703_1117", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0002_auto_20250703_1117.Migration.dependencies", "modulename": "streams.migrations.0002_auto_20250703_1117", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0001_initial&#x27;)]"}, {"fullname": "streams.migrations.0002_auto_20250703_1117.Migration.operations", "modulename": "streams.migrations.0002_auto_20250703_1117", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0003_auto_20250703_1122", "modulename": "streams.migrations.0003_auto_20250703_1122", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0003_auto_20250703_1122.Migration", "modulename": "streams.migrations.0003_auto_20250703_1122", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0003_auto_20250703_1122.Migration.dependencies", "modulename": "streams.migrations.0003_auto_20250703_1122", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0002_auto_20250703_1117&#x27;)]"}, {"fullname": "streams.migrations.0003_auto_20250703_1122.Migration.operations", "modulename": "streams.migrations.0003_auto_20250703_1122", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0004_auto_20250703_1133", "modulename": "streams.migrations.0004_auto_20250703_1133", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0004_auto_20250703_1133.Migration", "modulename": "streams.migrations.0004_auto_20250703_1133", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0004_auto_20250703_1133.Migration.dependencies", "modulename": "streams.migrations.0004_auto_20250703_1133", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0003_auto_20250703_1122&#x27;)]"}, {"fullname": "streams.migrations.0004_auto_20250703_1133.Migration.operations", "modulename": "streams.migrations.0004_auto_20250703_1133", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0005_auto_20250703_1136", "modulename": "streams.migrations.0005_auto_20250703_1136", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0005_auto_20250703_1136.Migration", "modulename": "streams.migrations.0005_auto_20250703_1136", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0005_auto_20250703_1136.Migration.dependencies", "modulename": "streams.migrations.0005_auto_20250703_1136", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0004_auto_20250703_1133&#x27;)]"}, {"fullname": "streams.migrations.0005_auto_20250703_1136.Migration.operations", "modulename": "streams.migrations.0005_auto_20250703_1136", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0006_auto_20250703_1140", "modulename": "streams.migrations.0006_auto_20250703_1140", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0006_auto_20250703_1140.Migration", "modulename": "streams.migrations.0006_auto_20250703_1140", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0006_auto_20250703_1140.Migration.dependencies", "modulename": "streams.migrations.0006_auto_20250703_1140", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0005_auto_20250703_1136&#x27;)]"}, {"fullname": "streams.migrations.0006_auto_20250703_1140.Migration.operations", "modulename": "streams.migrations.0006_auto_20250703_1140", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0007_auto_20250703_1144", "modulename": "streams.migrations.0007_auto_20250703_1144", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0007_auto_20250703_1144.Migration", "modulename": "streams.migrations.0007_auto_20250703_1144", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0007_auto_20250703_1144.Migration.dependencies", "modulename": "streams.migrations.0007_auto_20250703_1144", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0006_auto_20250703_1140&#x27;)]"}, {"fullname": "streams.migrations.0007_auto_20250703_1144.Migration.operations", "modulename": "streams.migrations.0007_auto_20250703_1144", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0008_auto_20250703_1148", "modulename": "streams.migrations.0008_auto_20250703_1148", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0008_auto_20250703_1148.Migration", "modulename": "streams.migrations.0008_auto_20250703_1148", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0008_auto_20250703_1148.Migration.dependencies", "modulename": "streams.migrations.0008_auto_20250703_1148", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0007_auto_20250703_1144&#x27;)]"}, {"fullname": "streams.migrations.0008_auto_20250703_1148.Migration.operations", "modulename": "streams.migrations.0008_auto_20250703_1148", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0009_auto_20250703_1150", "modulename": "streams.migrations.0009_auto_20250703_1150", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0009_auto_20250703_1150.Migration", "modulename": "streams.migrations.0009_auto_20250703_1150", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0009_auto_20250703_1150.Migration.dependencies", "modulename": "streams.migrations.0009_auto_20250703_1150", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0008_auto_20250703_1148&#x27;)]"}, {"fullname": "streams.migrations.0009_auto_20250703_1150.Migration.operations", "modulename": "streams.migrations.0009_auto_20250703_1150", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0010_auto_20250703_1154", "modulename": "streams.migrations.0010_auto_20250703_1154", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0010_auto_20250703_1154.Migration", "modulename": "streams.migrations.0010_auto_20250703_1154", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0010_auto_20250703_1154.Migration.dependencies", "modulename": "streams.migrations.0010_auto_20250703_1154", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0009_auto_20250703_1150&#x27;)]"}, {"fullname": "streams.migrations.0010_auto_20250703_1154.Migration.operations", "modulename": "streams.migrations.0010_auto_20250703_1154", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0011_auto_20250703_1158", "modulename": "streams.migrations.0011_auto_20250703_1158", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0011_auto_20250703_1158.Migration", "modulename": "streams.migrations.0011_auto_20250703_1158", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0011_auto_20250703_1158.Migration.dependencies", "modulename": "streams.migrations.0011_auto_20250703_1158", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0010_auto_20250703_1154&#x27;)]"}, {"fullname": "streams.migrations.0011_auto_20250703_1158.Migration.operations", "modulename": "streams.migrations.0011_auto_20250703_1158", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0012_auto_20250703_1200", "modulename": "streams.migrations.0012_auto_20250703_1200", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0012_auto_20250703_1200.Migration", "modulename": "streams.migrations.0012_auto_20250703_1200", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0012_auto_20250703_1200.Migration.dependencies", "modulename": "streams.migrations.0012_auto_20250703_1200", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0011_auto_20250703_1158&#x27;)]"}, {"fullname": "streams.migrations.0012_auto_20250703_1200.Migration.operations", "modulename": "streams.migrations.0012_auto_20250703_1200", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0013_auto_20250703_1206", "modulename": "streams.migrations.0013_auto_20250703_1206", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0013_auto_20250703_1206.Migration", "modulename": "streams.migrations.0013_auto_20250703_1206", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0013_auto_20250703_1206.Migration.dependencies", "modulename": "streams.migrations.0013_auto_20250703_1206", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0012_auto_20250703_1200&#x27;)]"}, {"fullname": "streams.migrations.0013_auto_20250703_1206.Migration.operations", "modulename": "streams.migrations.0013_auto_20250703_1206", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0014_auto_20250703_1209", "modulename": "streams.migrations.0014_auto_20250703_1209", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0014_auto_20250703_1209.Migration", "modulename": "streams.migrations.0014_auto_20250703_1209", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0014_auto_20250703_1209.Migration.dependencies", "modulename": "streams.migrations.0014_auto_20250703_1209", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0013_auto_20250703_1206&#x27;)]"}, {"fullname": "streams.migrations.0014_auto_20250703_1209.Migration.operations", "modulename": "streams.migrations.0014_auto_20250703_1209", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0015_auto_20250703_1512", "modulename": "streams.migrations.0015_auto_20250703_1512", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0015_auto_20250703_1512.Migration", "modulename": "streams.migrations.0015_auto_20250703_1512", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0015_auto_20250703_1512.Migration.dependencies", "modulename": "streams.migrations.0015_auto_20250703_1512", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0014_auto_20250703_1209&#x27;)]"}, {"fullname": "streams.migrations.0015_auto_20250703_1512.Migration.operations", "modulename": "streams.migrations.0015_auto_20250703_1512", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0016_auto_20250703_1516", "modulename": "streams.migrations.0016_auto_20250703_1516", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0016_auto_20250703_1516.Migration", "modulename": "streams.migrations.0016_auto_20250703_1516", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0016_auto_20250703_1516.Migration.dependencies", "modulename": "streams.migrations.0016_auto_20250703_1516", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0015_auto_20250703_1512&#x27;)]"}, {"fullname": "streams.migrations.0016_auto_20250703_1516.Migration.operations", "modulename": "streams.migrations.0016_auto_20250703_1516", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0017_auto_20250703_1523", "modulename": "streams.migrations.0017_auto_20250703_1523", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0017_auto_20250703_1523.Migration", "modulename": "streams.migrations.0017_auto_20250703_1523", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0017_auto_20250703_1523.Migration.dependencies", "modulename": "streams.migrations.0017_auto_20250703_1523", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0016_auto_20250703_1516&#x27;)]"}, {"fullname": "streams.migrations.0017_auto_20250703_1523.Migration.operations", "modulename": "streams.migrations.0017_auto_20250703_1523", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0018_auto_20250703_1526", "modulename": "streams.migrations.0018_auto_20250703_1526", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0018_auto_20250703_1526.Migration", "modulename": "streams.migrations.0018_auto_20250703_1526", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0018_auto_20250703_1526.Migration.dependencies", "modulename": "streams.migrations.0018_auto_20250703_1526", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0017_auto_20250703_1523&#x27;)]"}, {"fullname": "streams.migrations.0018_auto_20250703_1526.Migration.operations", "modulename": "streams.migrations.0018_auto_20250703_1526", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0019_auto_20250703_1531", "modulename": "streams.migrations.0019_auto_20250703_1531", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0019_auto_20250703_1531.Migration", "modulename": "streams.migrations.0019_auto_20250703_1531", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0019_auto_20250703_1531.Migration.dependencies", "modulename": "streams.migrations.0019_auto_20250703_1531", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0018_auto_20250703_1526&#x27;)]"}, {"fullname": "streams.migrations.0019_auto_20250703_1531.Migration.operations", "modulename": "streams.migrations.0019_auto_20250703_1531", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0020_auto_20250703_1619", "modulename": "streams.migrations.0020_auto_20250703_1619", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0020_auto_20250703_1619.Migration", "modulename": "streams.migrations.0020_auto_20250703_1619", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0020_auto_20250703_1619.Migration.dependencies", "modulename": "streams.migrations.0020_auto_20250703_1619", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0019_auto_20250703_1531&#x27;)]"}, {"fullname": "streams.migrations.0020_auto_20250703_1619.Migration.operations", "modulename": "streams.migrations.0020_auto_20250703_1619", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0021_auto_20250703_1657", "modulename": "streams.migrations.0021_auto_20250703_1657", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0021_auto_20250703_1657.Migration", "modulename": "streams.migrations.0021_auto_20250703_1657", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0021_auto_20250703_1657.Migration.dependencies", "modulename": "streams.migrations.0021_auto_20250703_1657", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0020_auto_20250703_1619&#x27;)]"}, {"fullname": "streams.migrations.0021_auto_20250703_1657.Migration.operations", "modulename": "streams.migrations.0021_auto_20250703_1657", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0022_auto_20250703_1700", "modulename": "streams.migrations.0022_auto_20250703_1700", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0022_auto_20250703_1700.Migration", "modulename": "streams.migrations.0022_auto_20250703_1700", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0022_auto_20250703_1700.Migration.dependencies", "modulename": "streams.migrations.0022_auto_20250703_1700", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0021_auto_20250703_1657&#x27;)]"}, {"fullname": "streams.migrations.0022_auto_20250703_1700.Migration.operations", "modulename": "streams.migrations.0022_auto_20250703_1700", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0023_auto_20250703_1740", "modulename": "streams.migrations.0023_auto_20250703_1740", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0023_auto_20250703_1740.Migration", "modulename": "streams.migrations.0023_auto_20250703_1740", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0023_auto_20250703_1740.Migration.dependencies", "modulename": "streams.migrations.0023_auto_20250703_1740", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0022_auto_20250703_1700&#x27;)]"}, {"fullname": "streams.migrations.0023_auto_20250703_1740.Migration.operations", "modulename": "streams.migrations.0023_auto_20250703_1740", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0024_auto_20250703_1743", "modulename": "streams.migrations.0024_auto_20250703_1743", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0024_auto_20250703_1743.Migration", "modulename": "streams.migrations.0024_auto_20250703_1743", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0024_auto_20250703_1743.Migration.dependencies", "modulename": "streams.migrations.0024_auto_20250703_1743", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0023_auto_20250703_1740&#x27;)]"}, {"fullname": "streams.migrations.0024_auto_20250703_1743.Migration.operations", "modulename": "streams.migrations.0024_auto_20250703_1743", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0025_auto_20250703_1748", "modulename": "streams.migrations.0025_auto_20250703_1748", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0025_auto_20250703_1748.Migration", "modulename": "streams.migrations.0025_auto_20250703_1748", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0025_auto_20250703_1748.Migration.dependencies", "modulename": "streams.migrations.0025_auto_20250703_1748", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0024_auto_20250703_1743&#x27;)]"}, {"fullname": "streams.migrations.0025_auto_20250703_1748.Migration.operations", "modulename": "streams.migrations.0025_auto_20250703_1748", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0026_auto_20250703_1756", "modulename": "streams.migrations.0026_auto_20250703_1756", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0026_auto_20250703_1756.Migration", "modulename": "streams.migrations.0026_auto_20250703_1756", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0026_auto_20250703_1756.Migration.dependencies", "modulename": "streams.migrations.0026_auto_20250703_1756", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0025_auto_20250703_1748&#x27;)]"}, {"fullname": "streams.migrations.0026_auto_20250703_1756.Migration.operations", "modulename": "streams.migrations.0026_auto_20250703_1756", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0027_auto_20250703_1804", "modulename": "streams.migrations.0027_auto_20250703_1804", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0027_auto_20250703_1804.Migration", "modulename": "streams.migrations.0027_auto_20250703_1804", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0027_auto_20250703_1804.Migration.dependencies", "modulename": "streams.migrations.0027_auto_20250703_1804", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0026_auto_20250703_1756&#x27;)]"}, {"fullname": "streams.migrations.0027_auto_20250703_1804.Migration.operations", "modulename": "streams.migrations.0027_auto_20250703_1804", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0028_auto_20250703_1809", "modulename": "streams.migrations.0028_auto_20250703_1809", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0028_auto_20250703_1809.Migration", "modulename": "streams.migrations.0028_auto_20250703_1809", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0028_auto_20250703_1809.Migration.dependencies", "modulename": "streams.migrations.0028_auto_20250703_1809", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0027_auto_20250703_1804&#x27;)]"}, {"fullname": "streams.migrations.0028_auto_20250703_1809.Migration.operations", "modulename": "streams.migrations.0028_auto_20250703_1809", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0029_auto_20250703_1821", "modulename": "streams.migrations.0029_auto_20250703_1821", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0029_auto_20250703_1821.Migration", "modulename": "streams.migrations.0029_auto_20250703_1821", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0029_auto_20250703_1821.Migration.dependencies", "modulename": "streams.migrations.0029_auto_20250703_1821", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0028_auto_20250703_1809&#x27;)]"}, {"fullname": "streams.migrations.0029_auto_20250703_1821.Migration.operations", "modulename": "streams.migrations.0029_auto_20250703_1821", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0030_auto_20250703_1823", "modulename": "streams.migrations.0030_auto_20250703_1823", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0030_auto_20250703_1823.Migration", "modulename": "streams.migrations.0030_auto_20250703_1823", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0030_auto_20250703_1823.Migration.dependencies", "modulename": "streams.migrations.0030_auto_20250703_1823", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0029_auto_20250703_1821&#x27;)]"}, {"fullname": "streams.migrations.0030_auto_20250703_1823.Migration.operations", "modulename": "streams.migrations.0030_auto_20250703_1823", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0031_auto_20250703_1826", "modulename": "streams.migrations.0031_auto_20250703_1826", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0031_auto_20250703_1826.Migration", "modulename": "streams.migrations.0031_auto_20250703_1826", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0031_auto_20250703_1826.Migration.dependencies", "modulename": "streams.migrations.0031_auto_20250703_1826", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0030_auto_20250703_1823&#x27;)]"}, {"fullname": "streams.migrations.0031_auto_20250703_1826.Migration.operations", "modulename": "streams.migrations.0031_auto_20250703_1826", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0032_auto_20250703_1834", "modulename": "streams.migrations.0032_auto_20250703_1834", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0032_auto_20250703_1834.Migration", "modulename": "streams.migrations.0032_auto_20250703_1834", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0032_auto_20250703_1834.Migration.dependencies", "modulename": "streams.migrations.0032_auto_20250703_1834", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0031_auto_20250703_1826&#x27;)]"}, {"fullname": "streams.migrations.0032_auto_20250703_1834.Migration.operations", "modulename": "streams.migrations.0032_auto_20250703_1834", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0033_auto_20250703_1852", "modulename": "streams.migrations.0033_auto_20250703_1852", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0033_auto_20250703_1852.Migration", "modulename": "streams.migrations.0033_auto_20250703_1852", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0033_auto_20250703_1852.Migration.dependencies", "modulename": "streams.migrations.0033_auto_20250703_1852", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0032_auto_20250703_1834&#x27;)]"}, {"fullname": "streams.migrations.0033_auto_20250703_1852.Migration.operations", "modulename": "streams.migrations.0033_auto_20250703_1852", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0034_auto_20250703_1854", "modulename": "streams.migrations.0034_auto_20250703_1854", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0034_auto_20250703_1854.Migration", "modulename": "streams.migrations.0034_auto_20250703_1854", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0034_auto_20250703_1854.Migration.dependencies", "modulename": "streams.migrations.0034_auto_20250703_1854", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0033_auto_20250703_1852&#x27;)]"}, {"fullname": "streams.migrations.0034_auto_20250703_1854.Migration.operations", "modulename": "streams.migrations.0034_auto_20250703_1854", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0035_auto_20250704_1037", "modulename": "streams.migrations.0035_auto_20250704_1037", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0035_auto_20250704_1037.Migration", "modulename": "streams.migrations.0035_auto_20250704_1037", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0035_auto_20250704_1037.Migration.dependencies", "modulename": "streams.migrations.0035_auto_20250704_1037", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0034_auto_20250703_1854&#x27;)]"}, {"fullname": "streams.migrations.0035_auto_20250704_1037.Migration.operations", "modulename": "streams.migrations.0035_auto_20250704_1037", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0036_auto_20250707_1606", "modulename": "streams.migrations.0036_auto_20250707_1606", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0036_auto_20250707_1606.Migration", "modulename": "streams.migrations.0036_auto_20250707_1606", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0036_auto_20250707_1606.Migration.dependencies", "modulename": "streams.migrations.0036_auto_20250707_1606", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0035_auto_20250704_1037&#x27;)]"}, {"fullname": "streams.migrations.0036_auto_20250707_1606.Migration.operations", "modulename": "streams.migrations.0036_auto_20250707_1606", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0037_auto_20250707_1607", "modulename": "streams.migrations.0037_auto_20250707_1607", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0037_auto_20250707_1607.Migration", "modulename": "streams.migrations.0037_auto_20250707_1607", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0037_auto_20250707_1607.Migration.dependencies", "modulename": "streams.migrations.0037_auto_20250707_1607", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0036_auto_20250707_1606&#x27;)]"}, {"fullname": "streams.migrations.0037_auto_20250707_1607.Migration.operations", "modulename": "streams.migrations.0037_auto_20250707_1607", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0038_auto_20250707_1608", "modulename": "streams.migrations.0038_auto_20250707_1608", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0038_auto_20250707_1608.Migration", "modulename": "streams.migrations.0038_auto_20250707_1608", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0038_auto_20250707_1608.Migration.dependencies", "modulename": "streams.migrations.0038_auto_20250707_1608", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0037_auto_20250707_1607&#x27;)]"}, {"fullname": "streams.migrations.0038_auto_20250707_1608.Migration.operations", "modulename": "streams.migrations.0038_auto_20250707_1608", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0039_auto_20250707_1609", "modulename": "streams.migrations.0039_auto_20250707_1609", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0039_auto_20250707_1609.Migration", "modulename": "streams.migrations.0039_auto_20250707_1609", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0039_auto_20250707_1609.Migration.dependencies", "modulename": "streams.migrations.0039_auto_20250707_1609", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0038_auto_20250707_1608&#x27;)]"}, {"fullname": "streams.migrations.0039_auto_20250707_1609.Migration.operations", "modulename": "streams.migrations.0039_auto_20250707_1609", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0040_auto_20250707_1611", "modulename": "streams.migrations.0040_auto_20250707_1611", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0040_auto_20250707_1611.Migration", "modulename": "streams.migrations.0040_auto_20250707_1611", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0040_auto_20250707_1611.Migration.dependencies", "modulename": "streams.migrations.0040_auto_20250707_1611", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0039_auto_20250707_1609&#x27;)]"}, {"fullname": "streams.migrations.0040_auto_20250707_1611.Migration.operations", "modulename": "streams.migrations.0040_auto_20250707_1611", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0041_auto_20250707_1614", "modulename": "streams.migrations.0041_auto_20250707_1614", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0041_auto_20250707_1614.Migration", "modulename": "streams.migrations.0041_auto_20250707_1614", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0041_auto_20250707_1614.Migration.dependencies", "modulename": "streams.migrations.0041_auto_20250707_1614", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0040_auto_20250707_1611&#x27;)]"}, {"fullname": "streams.migrations.0041_auto_20250707_1614.Migration.operations", "modulename": "streams.migrations.0041_auto_20250707_1614", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0042_auto_20250707_1615", "modulename": "streams.migrations.0042_auto_20250707_1615", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0042_auto_20250707_1615.Migration", "modulename": "streams.migrations.0042_auto_20250707_1615", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0042_auto_20250707_1615.Migration.dependencies", "modulename": "streams.migrations.0042_auto_20250707_1615", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0041_auto_20250707_1614&#x27;)]"}, {"fullname": "streams.migrations.0042_auto_20250707_1615.Migration.operations", "modulename": "streams.migrations.0042_auto_20250707_1615", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0043_auto_20250707_1618", "modulename": "streams.migrations.0043_auto_20250707_1618", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0043_auto_20250707_1618.Migration", "modulename": "streams.migrations.0043_auto_20250707_1618", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0043_auto_20250707_1618.Migration.dependencies", "modulename": "streams.migrations.0043_auto_20250707_1618", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0042_auto_20250707_1615&#x27;)]"}, {"fullname": "streams.migrations.0043_auto_20250707_1618.Migration.operations", "modulename": "streams.migrations.0043_auto_20250707_1618", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.migrations.0044_auto_20250707_1618", "modulename": "streams.migrations.0044_auto_20250707_1618", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.migrations.0044_auto_20250707_1618.Migration", "modulename": "streams.migrations.0044_auto_20250707_1618", "qualname": "Migration", "kind": "class", "doc": "<p>The base class for all migrations.</p>\n\n<p>Migration files will import this from django.db.migrations.Migration\nand subclass it as a class called Migration. It will have one or more\nof the following attributes:</p>\n\n<ul>\n<li>operations: A list of Operation instances, probably from django.db.migrations.operations</li>\n<li>dependencies: A list of tuples of (app_path, migration_name)</li>\n<li>run_before: A list of tuples of (app_path, migration_name)</li>\n<li>replaces: A list of migration_names</li>\n</ul>\n\n<p>Note that all migrations come out of migrations and into the Loader or\nGraph as instances, having been initialized with their app label and name.</p>\n", "bases": "django.db.migrations.migration.Migration"}, {"fullname": "streams.migrations.0044_auto_20250707_1618.Migration.dependencies", "modulename": "streams.migrations.0044_auto_20250707_1618", "qualname": "Migration.dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;streams&#x27;, &#x27;0043_auto_20250707_1618&#x27;)]"}, {"fullname": "streams.migrations.0044_auto_20250707_1618.Migration.operations", "modulename": "streams.migrations.0044_auto_20250707_1618", "qualname": "Migration.operations", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;AlterField  model_name=&#x27;apikey&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;camera&#x27;, name=&#x27;created_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;feedback&#x27;, name=&#x27;feedback_date&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;trigger&#x27;, name=&#x27;datetime_added&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;, &lt;AlterField  model_name=&#x27;triggerstatuslog&#x27;, name=&#x27;changed_at&#x27;, field=&lt;django.db.models.fields.DateTimeField&gt;&gt;]"}, {"fullname": "streams.models", "modulename": "streams.models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.models.APIKey", "modulename": "streams.models", "qualname": "APIKey", "kind": "class", "doc": "<p>Stores an API key associated with a Django user.\nUsed for authenticating API requests.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.APIKey.user", "modulename": "streams.models", "qualname": "APIKey.user", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a one-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Restaurant(Model):\n    place = OneToOneField(Place, related_name='restaurant')\n</code></pre>\n\n<p><code>Restaurant.place</code> is a <code>ForwardOneToOneDescriptor</code> instance.</p>\n"}, {"fullname": "streams.models.APIKey.key", "modulename": "streams.models", "qualname": "APIKey.key", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.APIKey.created_at", "modulename": "streams.models", "qualname": "APIKey.created_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.APIKey.regenerate_key", "modulename": "streams.models", "qualname": "APIKey.regenerate_key", "kind": "function", "doc": "<p>Generate a new API key for the user.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.APIKey.DoesNotExist", "modulename": "streams.models", "qualname": "APIKey.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.APIKey.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "APIKey.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.APIKey.user_id", "modulename": "streams.models", "qualname": "APIKey.user_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.models.APIKey.get_next_by_created_at", "modulename": "streams.models", "qualname": "APIKey.get_next_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.APIKey.get_previous_by_created_at", "modulename": "streams.models", "qualname": "APIKey.get_previous_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.APIKey.id", "modulename": "streams.models", "qualname": "APIKey.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.APIKey.objects", "modulename": "streams.models", "qualname": "APIKey.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.upload_to", "modulename": "streams.models", "qualname": "upload_to", "kind": "function", "doc": "<p>Define upload path for trimmed feedback videos.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instance</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback", "modulename": "streams.models", "qualname": "Feedback", "kind": "class", "doc": "<p>Stores user feedback including video and trimming timestamps.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.Feedback.unique_id", "modulename": "streams.models", "qualname": "Feedback.unique_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.user_id", "modulename": "streams.models", "qualname": "Feedback.user_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.feedback_text", "modulename": "streams.models", "qualname": "Feedback.feedback_text", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.video_url", "modulename": "streams.models", "qualname": "Feedback.video_url", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.trimmed_video", "modulename": "streams.models", "qualname": "Feedback.trimmed_video", "kind": "variable", "doc": "<p>The descriptor for the file attribute on the model instance. Return a\nFieldFile when accessed so you can write code like::</p>\n\n<pre><code>&gt;&gt;&gt; from myapp.models import MyModel\n&gt;&gt;&gt; instance = MyModel.objects.get(pk=1)\n&gt;&gt;&gt; instance.file.size\n</code></pre>\n\n<p>Assign a file object on assignment so you can do::</p>\n\n<pre><code>&gt;&gt;&gt; with open('/path/to/hello.world') as f:\n...     instance.file = File(f)\n</code></pre>\n"}, {"fullname": "streams.models.Feedback.start_time", "modulename": "streams.models", "qualname": "Feedback.start_time", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.end_time", "modulename": "streams.models", "qualname": "Feedback.end_time", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.feedback_date", "modulename": "streams.models", "qualname": "Feedback.feedback_date", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.is_processed", "modulename": "streams.models", "qualname": "Feedback.is_processed", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.DoesNotExist", "modulename": "streams.models", "qualname": "Feedback.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.Feedback.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "Feedback.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.Feedback.get_next_by_feedback_date", "modulename": "streams.models", "qualname": "Feedback.get_next_by_feedback_date", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.get_previous_by_feedback_date", "modulename": "streams.models", "qualname": "Feedback.get_previous_by_feedback_date", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Feedback.objects", "modulename": "streams.models", "qualname": "Feedback.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.get_mac", "modulename": "streams.models", "qualname": "get_mac", "kind": "function", "doc": "<p>Retrieve MAC address for a given IP using ARP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ip</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.extract_ip_from_source", "modulename": "streams.models", "qualname": "extract_ip_from_source", "kind": "function", "doc": "<p>Extract IP address from a given camera source URL.</p>\n\n<p>Returns None if it's a digit (e.g., USB camera like '0', '1').</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">source</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera", "modulename": "streams.models", "qualname": "Camera", "kind": "class", "doc": "<p>Represents a camera device, either USB or IP-based.\nAutomatically generates a MAC ID based on IP/MAC or UUID.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.Camera.name", "modulename": "streams.models", "qualname": "Camera.name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.source", "modulename": "streams.models", "qualname": "Camera.source", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.mac_id", "modulename": "streams.models", "qualname": "Camera.mac_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.is_turned_on", "modulename": "streams.models", "qualname": "Camera.is_turned_on", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.created_at", "modulename": "streams.models", "qualname": "Camera.created_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.save", "modulename": "streams.models", "qualname": "Camera.save", "kind": "function", "doc": "<p>Automatically assigns MAC ID and default name if not provided.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.DoesNotExist", "modulename": "streams.models", "qualname": "Camera.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.Camera.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "Camera.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.Camera.get_next_by_created_at", "modulename": "streams.models", "qualname": "Camera.get_next_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.get_previous_by_created_at", "modulename": "streams.models", "qualname": "Camera.get_previous_by_created_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.id", "modulename": "streams.models", "qualname": "Camera.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.objects", "modulename": "streams.models", "qualname": "Camera.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Camera.segmentactionlog_set", "modulename": "streams.models", "qualname": "Camera.segmentactionlog_set", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "streams.models.Person", "modulename": "streams.models", "qualname": "Person", "kind": "class", "doc": "<p>Represents a person recognized by the system.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.Person.name", "modulename": "streams.models", "qualname": "Person.name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Person.added_at", "modulename": "streams.models", "qualname": "Person.added_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Person.DoesNotExist", "modulename": "streams.models", "qualname": "Person.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.Person.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "Person.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.Person.get_next_by_added_at", "modulename": "streams.models", "qualname": "Person.get_next_by_added_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Person.get_previous_by_added_at", "modulename": "streams.models", "qualname": "Person.get_previous_by_added_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Person.id", "modulename": "streams.models", "qualname": "Person.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Person.objects", "modulename": "streams.models", "qualname": "Person.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Person.segmentactionlog_set", "modulename": "streams.models", "qualname": "Person.segmentactionlog_set", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "streams.models.Action", "modulename": "streams.models", "qualname": "Action", "kind": "class", "doc": "<p>Represents an action label detected in video (e.g., Fire, Running).</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.Action.name", "modulename": "streams.models", "qualname": "Action.name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Action.added_at", "modulename": "streams.models", "qualname": "Action.added_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Action.DoesNotExist", "modulename": "streams.models", "qualname": "Action.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.Action.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "Action.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.Action.get_next_by_added_at", "modulename": "streams.models", "qualname": "Action.get_next_by_added_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Action.get_previous_by_added_at", "modulename": "streams.models", "qualname": "Action.get_previous_by_added_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Action.id", "modulename": "streams.models", "qualname": "Action.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Action.objects", "modulename": "streams.models", "qualname": "Action.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Action.segmentactionlog_set", "modulename": "streams.models", "qualname": "Action.segmentactionlog_set", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "streams.models.SegmentActionLog", "modulename": "streams.models", "qualname": "SegmentActionLog", "kind": "class", "doc": "<p>Stores a record of an action detected in a video segment,\nalong with associated camera and person info.\nAlso tracks if the action triggered any active Trigger.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.SegmentActionLog.timestamp", "modulename": "streams.models", "qualname": "SegmentActionLog.timestamp", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.date", "modulename": "streams.models", "qualname": "SegmentActionLog.date", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.camera", "modulename": "streams.models", "qualname": "SegmentActionLog.camera", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "streams.models.SegmentActionLog.person", "modulename": "streams.models", "qualname": "SegmentActionLog.person", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "streams.models.SegmentActionLog.action", "modulename": "streams.models", "qualname": "SegmentActionLog.action", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "streams.models.SegmentActionLog.is_trigger", "modulename": "streams.models", "qualname": "SegmentActionLog.is_trigger", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.save", "modulename": "streams.models", "qualname": "SegmentActionLog.save", "kind": "function", "doc": "<p>Determine whether the segment matches any active and valid Trigger.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.DoesNotExist", "modulename": "streams.models", "qualname": "SegmentActionLog.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.SegmentActionLog.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "SegmentActionLog.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.SegmentActionLog.get_next_by_timestamp", "modulename": "streams.models", "qualname": "SegmentActionLog.get_next_by_timestamp", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.get_previous_by_timestamp", "modulename": "streams.models", "qualname": "SegmentActionLog.get_previous_by_timestamp", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.get_next_by_date", "modulename": "streams.models", "qualname": "SegmentActionLog.get_next_by_date", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.get_previous_by_date", "modulename": "streams.models", "qualname": "SegmentActionLog.get_previous_by_date", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.camera_id", "modulename": "streams.models", "qualname": "SegmentActionLog.camera_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.models.SegmentActionLog.person_id", "modulename": "streams.models", "qualname": "SegmentActionLog.person_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.models.SegmentActionLog.action_id", "modulename": "streams.models", "qualname": "SegmentActionLog.action_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.models.SegmentActionLog.id", "modulename": "streams.models", "qualname": "SegmentActionLog.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.SegmentActionLog.objects", "modulename": "streams.models", "qualname": "SegmentActionLog.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.process_trigger_text", "modulename": "streams.models", "qualname": "process_trigger_text", "kind": "function", "doc": "<p>Parse a free-form trigger text and extract camera/person/action fields.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trigger_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger", "modulename": "streams.models", "qualname": "Trigger", "kind": "class", "doc": "<p>Represents a user-defined rule that watches for specific conditions\n(camera, person, action) to trigger an event.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.Trigger.trigger_id", "modulename": "streams.models", "qualname": "Trigger.trigger_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.trigger_text", "modulename": "streams.models", "qualname": "Trigger.trigger_text", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.user", "modulename": "streams.models", "qualname": "Trigger.user", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "streams.models.Trigger.datetime_added", "modulename": "streams.models", "qualname": "Trigger.datetime_added", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.is_active", "modulename": "streams.models", "qualname": "Trigger.is_active", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.is_valid", "modulename": "streams.models", "qualname": "Trigger.is_valid", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.camera_id", "modulename": "streams.models", "qualname": "Trigger.camera_id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.camera_name", "modulename": "streams.models", "qualname": "Trigger.camera_name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.person", "modulename": "streams.models", "qualname": "Trigger.person", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.action", "modulename": "streams.models", "qualname": "Trigger.action", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.save", "modulename": "streams.models", "qualname": "Trigger.save", "kind": "function", "doc": "<p>On save, extract camera/person/action from trigger_text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.to_dict", "modulename": "streams.models", "qualname": "Trigger.to_dict", "kind": "function", "doc": "<p>Convert trigger instance to a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.DoesNotExist", "modulename": "streams.models", "qualname": "Trigger.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.Trigger.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "Trigger.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.Trigger.user_id", "modulename": "streams.models", "qualname": "Trigger.user_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.models.Trigger.get_next_by_datetime_added", "modulename": "streams.models", "qualname": "Trigger.get_next_by_datetime_added", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.get_previous_by_datetime_added", "modulename": "streams.models", "qualname": "Trigger.get_previous_by_datetime_added", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.objects", "modulename": "streams.models", "qualname": "Trigger.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.Trigger.triggerstatuslog_set", "modulename": "streams.models", "qualname": "Trigger.triggerstatuslog_set", "kind": "variable", "doc": "<p>Accessor to the related objects manager on the reverse side of a\nmany-to-one relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Parent.children</code> is a <code>ReverseManyToOneDescriptor</code> instance.</p>\n\n<p>Most of the implementation is delegated to a dynamically defined manager\nclass built by <code>create_forward_many_to_many_manager()</code> defined below.</p>\n"}, {"fullname": "streams.models.TriggerStatusLog", "modulename": "streams.models", "qualname": "TriggerStatusLog", "kind": "class", "doc": "<p>Logs any status change (active/inactive) for a trigger.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.TriggerStatusLog.trigger", "modulename": "streams.models", "qualname": "TriggerStatusLog.trigger", "kind": "variable", "doc": "<p>Accessor to the related object on the forward side of a many-to-one or\none-to-one (via ForwardOneToOneDescriptor subclass) relation.</p>\n\n<p>In the example::</p>\n\n<pre><code>class Child(Model):\n    parent = ForeignKey(Parent, related_name='children')\n</code></pre>\n\n<p><code>Child.parent</code> is a <code>ForwardManyToOneDescriptor</code> instance.</p>\n"}, {"fullname": "streams.models.TriggerStatusLog.changed_at", "modulename": "streams.models", "qualname": "TriggerStatusLog.changed_at", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.TriggerStatusLog.new_status", "modulename": "streams.models", "qualname": "TriggerStatusLog.new_status", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.TriggerStatusLog.DoesNotExist", "modulename": "streams.models", "qualname": "TriggerStatusLog.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.TriggerStatusLog.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "TriggerStatusLog.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.TriggerStatusLog.trigger_id", "modulename": "streams.models", "qualname": "TriggerStatusLog.trigger_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "streams.models.TriggerStatusLog.get_next_by_changed_at", "modulename": "streams.models", "qualname": "TriggerStatusLog.get_next_by_changed_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.TriggerStatusLog.get_previous_by_changed_at", "modulename": "streams.models", "qualname": "TriggerStatusLog.get_previous_by_changed_at", "kind": "function", "doc": "<p>Method descriptor with partial application of the given arguments\nand keywords.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.TriggerStatusLog.id", "modulename": "streams.models", "qualname": "TriggerStatusLog.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.TriggerStatusLog.objects", "modulename": "streams.models", "qualname": "TriggerStatusLog.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.ModelRegistry", "modulename": "streams.models", "qualname": "ModelRegistry", "kind": "class", "doc": "<p>Tracks uploaded ML models and their active/inactive status.\nEnsures only one model is active at a time.</p>\n", "bases": "django.db.models.base.Model"}, {"fullname": "streams.models.ModelRegistry.model_name", "modulename": "streams.models", "qualname": "ModelRegistry.model_name", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.ModelRegistry.status", "modulename": "streams.models", "qualname": "ModelRegistry.status", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.ModelRegistry.save", "modulename": "streams.models", "qualname": "ModelRegistry.save", "kind": "function", "doc": "<p>Ensure only one model is active at any time.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.ModelRegistry.get_current_model", "modulename": "streams.models", "qualname": "ModelRegistry.get_current_model", "kind": "function", "doc": "<p>Return the name of the currently active model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.ModelRegistry.DoesNotExist", "modulename": "streams.models", "qualname": "ModelRegistry.DoesNotExist", "kind": "class", "doc": "<p>The requested object does not exist</p>\n", "bases": "django.core.exceptions.ObjectDoesNotExist"}, {"fullname": "streams.models.ModelRegistry.MultipleObjectsReturned", "modulename": "streams.models", "qualname": "ModelRegistry.MultipleObjectsReturned", "kind": "class", "doc": "<p>The query returned multiple objects when only one was expected.</p>\n", "bases": "django.core.exceptions.MultipleObjectsReturned"}, {"fullname": "streams.models.ModelRegistry.id", "modulename": "streams.models", "qualname": "ModelRegistry.id", "kind": "function", "doc": "<p>A wrapper for a deferred-loading field. When the value is read from this\nobject the first time, the query is executed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.models.ModelRegistry.objects", "modulename": "streams.models", "qualname": "ModelRegistry.objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline", "modulename": "streams.pipeline", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.pipeline.hls_pipeline", "modulename": "streams.pipeline.hls_pipeline", "kind": "module", "doc": "<p>HLS Processing Pipeline</p>\n\n<p>Captures camera feed using OpenCV, pushes frames into FFmpeg for HLS conversion,\nmonitors HLS segments, and performs inference using ML models.</p>\n\n<p>Each detected action/person is saved into:</p>\n\n<ul>\n<li>Database (via Django models)</li>\n<li>CSV Logs</li>\n<li>Per-segment sidecar metadata JSON</li>\n<li>Metadata Index (metadata_index.json)</li>\n</ul>\n"}, {"fullname": "streams.pipeline.hls_pipeline.SEGMENT_DURATION", "modulename": "streams.pipeline.hls_pipeline", "qualname": "SEGMENT_DURATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "streams.pipeline.hls_pipeline.OUTPUT_HEIGHT", "modulename": "streams.pipeline.hls_pipeline", "qualname": "OUTPUT_HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "360"}, {"fullname": "streams.pipeline.hls_pipeline.OUTPUT_BITRATE", "modulename": "streams.pipeline.hls_pipeline", "qualname": "OUTPUT_BITRATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;400k&#x27;"}, {"fullname": "streams.pipeline.hls_pipeline.REFRESH_INTERVAL", "modulename": "streams.pipeline.hls_pipeline", "qualname": "REFRESH_INTERVAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "streams.pipeline.hls_pipeline.INFERENCE_WORKERS", "modulename": "streams.pipeline.hls_pipeline", "qualname": "INFERENCE_WORKERS", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "streams.pipeline.hls_pipeline.inference_q", "modulename": "streams.pipeline.hls_pipeline", "qualname": "inference_q", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;queue.Queue object&gt;"}, {"fullname": "streams.pipeline.hls_pipeline.should_continue", "modulename": "streams.pipeline.hls_pipeline", "qualname": "should_continue", "kind": "function", "doc": "<p>Check whether camera with given MAC ID is still turned on.</p>\n\n<p>Args:\n    mac_id (str): MAC ID of camera.</p>\n\n<p>Returns:\n    bool: True if turned on, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mac_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.hls_pipeline.get_model_name", "modulename": "streams.pipeline.hls_pipeline", "qualname": "get_model_name", "kind": "function", "doc": "<p>Get the currently selected model from registry.</p>\n\n<p>Returns:\n    str: Model name (e.g., 'Fire-Net') or 'No Model Selected'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.hls_pipeline.camera_feed", "modulename": "streams.pipeline.hls_pipeline", "qualname": "camera_feed", "kind": "function", "doc": "<p>Capture live frames from camera and push them into FFmpeg for HLS segmenting.</p>\n\n<p>Args:\n    camera (Camera): Django Camera model object.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">camera</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.hls_pipeline.camera_watcher", "modulename": "streams.pipeline.hls_pipeline", "qualname": "camera_watcher", "kind": "function", "doc": "<p>Watch for new HLS .ts segments and enqueue them for inference.</p>\n\n<p>Args:\n    camera (Camera): Django camera model.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">camera</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.hls_pipeline.update_master_metadata", "modulename": "streams.pipeline.hls_pipeline", "qualname": "update_master_metadata", "kind": "function", "doc": "<p>Append metadata of a segment to <code>metadata_index.json</code>.</p>\n\n<p>Args:\n    camera (Camera): Camera object.\n    segment_meta (dict): Metadata for one segment.\n    duration (float): Duration of the segment in seconds.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">camera</span>, </span><span class=\"param\"><span class=\"n\">segment_meta</span>, </span><span class=\"param\"><span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mf\">5.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.hls_pipeline.run_all_cameras", "modulename": "streams.pipeline.hls_pipeline", "qualname": "run_all_cameras", "kind": "function", "doc": "<p>Entrypoint to launch all pipelines for cameras that are turned on.\nSpawns:</p>\n\n<ul>\n<li>FFmpeg HLS thread</li>\n<li>Watcher thread</li>\n<li>Inference workers (thread pool)</li>\n</ul>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.utils", "modulename": "streams.pipeline.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.pipeline.utils.device", "modulename": "streams.pipeline.utils", "qualname": "device", "kind": "variable", "doc": "<p></p>\n", "default_value": "device(type=&#x27;cpu&#x27;)"}, {"fullname": "streams.pipeline.utils.classes", "modulename": "streams.pipeline.utils", "qualname": "classes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;Fire&#x27;, &#x27;No_Fire&#x27;]"}, {"fullname": "streams.pipeline.utils.model", "modulename": "streams.pipeline.utils", "qualname": "model", "kind": "variable", "doc": "<p></p>\n", "default_value": "MobileNetV2(\n  (features): Sequential(\n    (0): Conv2dNormActivation(\n      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (2): ReLU6(inplace=True)\n    )\n    (1): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (2): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)\n          (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (3): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)\n          (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (4): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)\n          (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (5): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n          (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (6): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n          (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (7): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)\n          (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (8): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (9): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (10): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (11): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)\n          (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (12): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (13): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (14): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)\n          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (15): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)\n          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (16): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)\n          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (17): InvertedResidual(\n      (conv): Sequential(\n        (0): Conv2dNormActivation(\n          (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (1): Conv2dNormActivation(\n          (0): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)\n          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU6(inplace=True)\n        )\n        (2): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (18): Conv2dNormActivation(\n      (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (1): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (2): ReLU6(inplace=True)\n    )\n  )\n  (classifier): Sequential(\n    (0): Dropout(p=0.2, inplace=False)\n    (1): Linear(in_features=1280, out_features=2, bias=True)\n  )\n)"}, {"fullname": "streams.pipeline.utils.BASE_DIR", "modulename": "streams.pipeline.utils", "qualname": "BASE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/app/streams/pipeline&#x27;"}, {"fullname": "streams.pipeline.utils.run_model_on_segment", "modulename": "streams.pipeline.utils", "qualname": "run_model_on_segment", "kind": "function", "doc": "<p>Simulated model for testing: randomly selects an action and 1\u20133 people.</p>\n\n<p>Args:\n    segment_path (str): Path to the video segment file (not used here).</p>\n\n<p>Returns:\n    Tuple[str, List[str]]: Randomly chosen action label and person names.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">segment_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.pipeline.utils.predict_ts_clip_label", "modulename": "streams.pipeline.utils", "qualname": "predict_ts_clip_label", "kind": "function", "doc": "<p>Predict the label (\"Fire\" or \"No Fire\") for a .ts video clip using MobileNetV2.</p>\n\n<p>Args:\n    video_path (str): Path to the .ts segment file</p>\n\n<p>Returns:\n    str: Predicted label (\"Fire\", \"No Fire\", or \"Error\" if failed)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">video_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.tests", "modulename": "streams.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.urls", "modulename": "streams.urls", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.urls.urlpatterns", "modulename": "streams.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;api/dates/&#x27; [name=&#x27;list_dates&#x27;]&gt;, &lt;URLPattern &#x27;api/dates/&lt;str:date_str&gt;/cameras/&#x27; [name=&#x27;list_cameras&#x27;]&gt;, &lt;URLPattern &#x27;api/streams/&lt;str:date_str&gt;/&lt;str:camera_id&gt;/metadata_index/&#x27; [name=&#x27;metadata_index&#x27;]&gt;, &lt;URLPattern &#x27;api/streams/&lt;str:date_str&gt;/&lt;str:camera_id&gt;/playlist/&#x27; [name=&#x27;playlist_redirect&#x27;]&gt;, &lt;URLPattern &#x27;api/streams/&lt;str:date_str&gt;/&lt;str:camera_id&gt;/recent/&#x27; [name=&#x27;list_recent&#x27;]&gt;, &lt;URLPattern &#x27;api/streams/manifest/&#x27; [name=&#x27;all_streams_manifest&#x27;]&gt;, &lt;URLPattern &#x27;api/give_feedback/&#x27; [name=&#x27;give_feedback&#x27;]&gt;, &lt;URLPattern &#x27;api/get_feedbacks/&#x27; [name=&#x27;get_feedbacks&#x27;]&gt;, &lt;URLPattern &#x27;admin/create-user/&#x27;&gt;, &lt;URLPattern &#x27;get-key/&#x27;&gt;, &lt;URLPattern &#x27;view-api-key/&#x27;&gt;, &lt;URLPattern &#x27;regenerate-api-key/&#x27;&gt;, &lt;URLPattern &#x27;api/cameras/add/&#x27; [name=&#x27;add_camera&#x27;]&gt;, &lt;URLPattern &#x27;api/cameras/&lt;int:camera_id&gt;/edit/&#x27; [name=&#x27;edit_camera&#x27;]&gt;, &lt;URLPattern &#x27;api/cameras/&lt;int:camera_id&gt;/delete/&#x27; [name=&#x27;delete_camera&#x27;]&gt;, &lt;URLPattern &#x27;api/cameras/&lt;int:camera_id&gt;/toggle/&#x27; [name=&#x27;toggle_camera&#x27;]&gt;, &lt;URLPattern &#x27;api/cameras/&lt;int:camera_id&gt;/&#x27; [name=&#x27;get_camera&#x27;]&gt;, &lt;URLPattern &#x27;api/cameras/&#x27; [name=&#x27;list_cameras&#x27;]&gt;, &lt;URLPattern &#x27;api/triggers/add/&#x27;&gt;, &lt;URLPattern &#x27;api/triggers/list/&#x27;&gt;, &lt;URLPattern &#x27;api/triggers/delete/&#x27;&gt;, &lt;URLPattern &#x27;api/triggers/toggle/&#x27;&gt;, &lt;URLPattern &#x27;api/events/inspect/&#x27; [name=&#x27;inspect_events&#x27;]&gt;, &lt;URLPattern &#x27;api/events/metadata/&#x27; [name=&#x27;get_events_metadata&#x27;]&gt;, &lt;URLPattern &#x27;api/dummy_models/&#x27; [name=&#x27;list_models&#x27;]&gt;, &lt;URLPattern &#x27;api/dummy_model_activate/&#x27; [name=&#x27;activate_model&#x27;]&gt;]"}, {"fullname": "streams.views", "modulename": "streams.views", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "streams.views.list_models", "modulename": "streams.views", "qualname": "list_models", "kind": "function", "doc": "<p>GET /api/models/</p>\n\n<p>Returns a list of all ML models and their active status.</p>\n\n<p>Args:\n    request (HttpRequest): Django request object.</p>\n\n<p>Returns:\n    JsonResponse: {\n        \"models\": [\n            {\n                \"model_id\": int,\n                \"model_name\": str,\n                \"status\": bool\n            }, ...\n        ]\n    }</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.activate_model", "modulename": "streams.views", "qualname": "activate_model", "kind": "function", "doc": "<p>POST /api/models/activate/</p>\n\n<p>Activate a model by ID (deactivates others automatically).</p>\n\n<p>Form Data:\n    model_id (str): Primary key of ModelRegistry.</p>\n\n<p>Returns:\n    200: {\"message\": \"Model activated\", \"model_name\": str}\n    400: {\"error\": \"Missing model_id\"}\n    404: Http404 if model not found\n    500: {\"error\": str(exception)}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_camera_folder", "modulename": "streams.views", "qualname": "get_camera_folder", "kind": "function", "doc": "<p>Build and verify the media storage path for a given date and camera.</p>\n\n<p>Args:\n    date_str (str): Date in YYYY-MM-DD.\n    camera_id (str): Camera MAC ID.</p>\n\n<p>Returns:\n    str: Absolute path to the folder.</p>\n\n<p>Raises:\n    Http404: If the path does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">date_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.views.list_dates", "modulename": "streams.views", "qualname": "list_dates", "kind": "function", "doc": "<p>GET /api/dates/</p>\n\n<p>List all available recording dates in MEDIA_ROOT.</p>\n\n<p>Returns:\n    JsonResponse: {\"dates\": [ \"YYYY-MM-DD\", ... ]}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.list_cameras_for_date", "modulename": "streams.views", "qualname": "list_cameras_for_date", "kind": "function", "doc": "<p>GET /api/dates/<date_str>/cameras/</p>\n\n<p>List all camera folders for the given date.</p>\n\n<p>Args:\n    date_str (str): Recording date.</p>\n\n<p>Returns:\n    JsonResponse: {\"cameras\": [ \"cam0\", \"cam1\", ... ]}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">date_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.metadata_index", "modulename": "streams.views", "qualname": "metadata_index", "kind": "function", "doc": "<p>GET /api/streams/<date_str>/<camera_id>/metadata_index/</p>\n\n<p>Return the metadata_index.json for a specific stream.</p>\n\n<p>Returns:\n    JsonResponse: Parsed contents of metadata_index.json\n    404: If index file not found\n    500: If JSON parse error</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">date_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_central_host", "modulename": "streams.views", "qualname": "get_central_host", "kind": "function", "doc": "<p>Read central proxy host from agent config.</p>\n\n<p>Returns:\n    str: \"<hostname>:<port>\"</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "streams.views.playlist_redirect", "modulename": "streams.views", "qualname": "playlist_redirect", "kind": "function", "doc": "<p>GET /api/streams/<date_str>/<camera_id>/playlist/</p>\n\n<p>Generate a JSON response with the proxied HLS playlist URL.</p>\n\n<p>Returns:\n    JsonResponse: {\"playlist_url\": str}\n    500: {\"error\": str, \"detail\": str}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">date_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.list_recent_segments", "modulename": "streams.views", "qualname": "list_recent_segments", "kind": "function", "doc": "<p>GET /api/streams/<date_str>/<camera_id>/recent/?count=N</p>\n\n<p>List the last N .ts segments and their JSON metadata files.</p>\n\n<p>Query Params:\n    count (int): Number of segments to return (default 10)</p>\n\n<p>Returns:\n    JsonResponse: {\n        \"segments\": [ \"segment_00023.ts\", ... ],\n        \"metadata\": [ \"segment_00023.json\", ... ]\n    }</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">date_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.all_streams_manifest", "modulename": "streams.views", "qualname": "all_streams_manifest", "kind": "function", "doc": "<p>GET /api/streams/manifest/</p>\n\n<p>Return a manifest of all dates and cameras available.</p>\n\n<p>Returns:\n    JsonResponse: {\n        \"dates\": {\n            \"YYYY-MM-DD\": [\"cam0\", \"cam1\", ...], ...\n        }\n    }</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.is_admin", "modulename": "streams.views", "qualname": "is_admin", "kind": "function", "doc": "<p>Return True if user is superuser (used for admin-only views).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_authenticated_user", "modulename": "streams.views", "qualname": "get_authenticated_user", "kind": "function", "doc": "<p>Authenticate via POSTed username and password.</p>\n\n<p>Returns:\n    Tuple[User or None, JsonResponse or None]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.create_user", "modulename": "streams.views", "qualname": "create_user", "kind": "function", "doc": "<p>Admin-only: Create a new Django user.</p>\n\n<p>Form Data:\n    username, password, email</p>\n\n<p>Returns:\n    200: {\"message\": \"User created successfully\", \"username\": str}\n    400: {\"error\": str}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.register_or_get_key", "modulename": "streams.views", "qualname": "register_or_get_key", "kind": "function", "doc": "<p>POST /api/register/</p>\n\n<p>Authenticate user via form-data and return or create an API key.</p>\n\n<p>Returns:\n    200: {\n        'username': str,\n        'api_key': str,\n        'created_at': ISO8601 timestamp\n    }\n    400/405: {\"error\": str}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.view_api_key", "modulename": "streams.views", "qualname": "view_api_key", "kind": "function", "doc": "<p>POST /api/view-api-key/</p>\n\n<p>Return the authenticated user's API key.</p>\n\n<p>Returns:\n    200: { 'username', 'api_key', 'created_at' }\n    404: {\"error\": \"API key not found\"}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.regenerate_api_key", "modulename": "streams.views", "qualname": "regenerate_api_key", "kind": "function", "doc": "<p>POST /api/regenerate-api-key/</p>\n\n<p>Authenticate user via form-data and regenerate their API key.</p>\n\n<p>Returns:\n    200: { 'message', 'username', 'api_key', 'created_at' }\n    404: {\"error\": \"API key not found\"}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.handle_feedback", "modulename": "streams.views", "qualname": "handle_feedback", "kind": "function", "doc": "<p>POST /api/feedback/</p>\n\n<p>Trim a video based on provided start/end times and save feedback.</p>\n\n<p>JSON Body:\n    {\n        \"user_id\": str,\n        \"feedback_text\": str,\n        \"video_url\": str,     # must include '/media/'\n        \"start_time\": \"HH:MM:SS\",\n        \"end_time\": \"HH:MM:SS\"\n    }</p>\n\n<p>Returns:\n    200: {'status': 'success', 'id': uuid, 'trimmed_video': path}\n    400: missing/invalid fields\n    404: file not found\n    500: processing or server error</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_feedbacks", "modulename": "streams.views", "qualname": "get_feedbacks", "kind": "function", "doc": "<p>GET /api/feedbacks/</p>\n\n<p>List all feedback entries.</p>\n\n<p>Returns:\n    JsonResponse (list): [\n        {\n            \"user_id\": str,\n            \"feedback_text\": str,\n            \"predicted_text\": str,\n            \"date\": \"YYYY-MM-DD HH:MM\",\n            \"video_url\": str,\n            \"is_processed\": bool\n        }, ...\n    ]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.add_camera", "modulename": "streams.views", "qualname": "add_camera", "kind": "function", "doc": "<p>POST /api/cameras/add/</p>\n\n<p>Add a new camera record.</p>\n\n<p>JSON Body:\n    {\n        \"source\": str,\n        \"name\": str (optional)\n    }</p>\n\n<p>Returns:\n    201: Camera JSON\n    400/409/500: {\"error\": str}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.edit_camera", "modulename": "streams.views", "qualname": "edit_camera", "kind": "function", "doc": "<p>POST /api/cameras/<camera_id>/edit/</p>\n\n<p>Update camera fields: name, source, is_turned_on.</p>\n\n<p>Returns:\n    200: Updated camera JSON\n    404/400/500: {\"error\": str}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.delete_camera", "modulename": "streams.views", "qualname": "delete_camera", "kind": "function", "doc": "<p>POST /api/cameras/<camera_id>/delete/</p>\n\n<p>Delete a camera record.</p>\n\n<p>Returns:\n    200: {\"message\": \"Camera deleted\"}\n    404: HttpResponseNotFound</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.toggle_camera", "modulename": "streams.views", "qualname": "toggle_camera", "kind": "function", "doc": "<p>POST /api/cameras/<camera_id>/toggle/</p>\n\n<p>Toggle the is_turned_on flag.</p>\n\n<p>Returns:\n    200: {\"message\":\"Camera toggled\",\"is_turned_on\":bool}\n    404: if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.list_cameras", "modulename": "streams.views", "qualname": "list_cameras", "kind": "function", "doc": "<p>POST /api/cameras/list/</p>\n\n<p>Return all cameras.</p>\n\n<p>Returns:\n    200: {\"cameras\": [ {...}, ... ]}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_camera", "modulename": "streams.views", "qualname": "get_camera", "kind": "function", "doc": "<p>POST /api/cameras/<camera_id>/</p>\n\n<p>Return details for a single camera.</p>\n\n<p>Returns:\n    200: camera JSON\n    404: if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"n\">camera_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.add_trigger", "modulename": "streams.views", "qualname": "add_trigger", "kind": "function", "doc": "<p>POST /api/triggers/add/</p>\n\n<p>Create a new trigger based on free-form text.</p>\n\n<p>JSON Body:\n    {\"trigger_text\": str}</p>\n\n<p>Returns:\n    200: {\"status\":\"created\",\"trigger\":dict}\n    400/500: {\"error\": str}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_triggers", "modulename": "streams.views", "qualname": "get_triggers", "kind": "function", "doc": "<p>POST /api/triggers/list/?active=1</p>\n\n<p>List triggers; filter by active if query param <code>active=1</code>.</p>\n\n<p>Returns:\n    200: {\"triggers\": [ dict, ... ]}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.delete_trigger", "modulename": "streams.views", "qualname": "delete_trigger", "kind": "function", "doc": "<p>POST /api/triggers/delete/</p>\n\n<p>JSON Body:\n    {\"trigger_id\": uuid}</p>\n\n<p>Returns:\n    200: {\"status\":\"deleted\"}\n    404: {\"error\":\"Trigger not found\"}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.toggle_trigger", "modulename": "streams.views", "qualname": "toggle_trigger", "kind": "function", "doc": "<p>Activate or deactivate a trigger, and log the change.</p>\n\n<p>POST /api/triggers/toggle/</p>\n\n<p>Input JSON (in request.body):\n    {\n        \"trigger_id\": \"<uuid>\",\n        \"is_active\": true|false\n    }</p>\n\n<p>Args:\n    request (HttpRequest): must include valid API key and authenticated user.</p>\n\n<p>Returns:\n    200: {\n           \"status\": \"updated\",\n           \"trigger\": { \u2026trigger.to_dict()\u2026 }\n         }\n    400: {\"error\": \"trigger_id and is_active are required\"}  \u2013 if missing fields\n    404: {\"error\": \"Trigger not found\"}                     \u2013 if no matching trigger\n    500: {\"error\": \"<exception message>\"}                   \u2013 on other exceptions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.inspect_events", "modulename": "streams.views", "qualname": "inspect_events", "kind": "function", "doc": "<p>Retrieve up to 200 recent event logs filtered by various criteria.</p>\n\n<p>POST /api/events/inspect/</p>\n\n<p>Input JSON (in request.body):\n    {\n        \"persons\":    [\"name1\", \u2026] | \"all\",\n        \"actions\":    [\"act1\", \u2026]  | \"all\",\n        \"camera_ids\": [\"mac1\", \u2026]  | \"all\",\n        \"trigger\":    \"true\"|\"false\"|\"all\",\n        \"date\":       \"YYYY-MM-DD\",\n        \"start_date\": \"YYYY-MM-DD\",\n        \"end_date\":   \"YYYY-MM-DD\"\n    }</p>\n\n<p>Args:\n    request (HttpRequest): must include valid API key; only POST allowed.</p>\n\n<p>Returns:\n    200: [  // array of up to 200 objects ordered by descending timestamp\n        {\n          \"timestamp\": \"<ISO datetime>\",\n          \"date\":      \"<YYYY-MM-DD>\",\n          \"camera_id\": \"<mac_id>\",\n          \"camera_name\": \"<name>\",\n          \"person\":    \"<person name>|null\",\n          \"action\":    \"<action name>|null\",\n          \"is_trigger\": true|false\n        },\n        \u2026\n    ]\n    400: {\"error\": \"Invalid JSON\"}          \u2013 if request.body not valid JSON\n    405: {\"error\": \"Only POST method allowed\"} \u2013 if non-POST request</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "streams.views.get_events_metadata", "modulename": "streams.views", "qualname": "get_events_metadata", "kind": "function", "doc": "<p>Fetch distinct values for building an events-filter UI.</p>\n\n<p>GET /api/events/metadata/</p>\n\n<p>Args:\n    request (HttpRequest): must include valid API key; only GET allowed.</p>\n\n<p>Returns:\n    200: {\n      \"persons\":  [\"Alice\", \"Bob\", \u2026],\n      \"actions\":  [\"enter\", \"exit\", \u2026],\n      \"cameras\":  [\n          { \"mac_id\": \"ABC123\", \"name\": \"Front Door\" }, \u2026\n      ],\n      \"dates\":    [\"2025-07-01\", \"2025-07-02\", \u2026]\n    }</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "trainingspace", "modulename": "trainingspace", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.admin", "modulename": "trainingspace.admin", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.apps", "modulename": "trainingspace.apps", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.apps.TrainingspaceConfig", "modulename": "trainingspace.apps", "qualname": "TrainingspaceConfig", "kind": "class", "doc": "<p>Class representing a Django application and its configuration.</p>\n", "bases": "django.apps.config.AppConfig"}, {"fullname": "trainingspace.apps.TrainingspaceConfig.default_auto_field", "modulename": "trainingspace.apps", "qualname": "TrainingspaceConfig.default_auto_field", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;django.db.models.BigAutoField&#x27;"}, {"fullname": "trainingspace.apps.TrainingspaceConfig.name", "modulename": "trainingspace.apps", "qualname": "TrainingspaceConfig.name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;trainingspace&#x27;"}, {"fullname": "trainingspace.models", "modulename": "trainingspace.models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.tests", "modulename": "trainingspace.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.urls", "modulename": "trainingspace.urls", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.urls.urlpatterns", "modulename": "trainingspace.urls", "qualname": "urlpatterns", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;URLPattern &#x27;model_marketplace/&#x27;&gt;, &lt;URLPattern &#x27;model_details/&#x27;&gt;]"}, {"fullname": "trainingspace.views", "modulename": "trainingspace.views", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "trainingspace.views.proxy_fetch_public_models", "modulename": "trainingspace.views", "qualname": "proxy_fetch_public_models", "kind": "function", "doc": "<p>Proxy-fetch all public models from the central vendor service.</p>\n\n<p>Endpoint:\n    Any HTTP method (uses GET internally)</p>\n\n<p>Input:\n    None in request body.</p>\n\n<p>Process:\n    - Loads <code>house_id</code> and <code>secret_key</code> via <code>config.load()</code>.\n    - Computes SHA\u2011256 of <code>house_id + secret_key</code>.\n    - Sends a GET to the vendor URL with headers:\n        X-House-ID: <house_id>\n        X-Auth-Hash: <computed hash></p>\n\n<p>Returns:\n    200: <JSON> \u2014 the list/details of public models from upstream\n    500: {\"error\": \"<message>\"} \u2014 missing config or other exceptions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "trainingspace.views.proxy_fetch_model_by_id", "modulename": "trainingspace.views", "qualname": "proxy_fetch_model_by_id", "kind": "function", "doc": "<p>Proxy-fetch a single model\u2019s details by its ID.</p>\n\n<p>Endpoint:\n    Any HTTP method (uses GET internally)</p>\n\n<p>Input JSON (in request.body):\n    {\n        \"model_id\": \"<model identifier>\"\n    }</p>\n\n<p>Process:\n    - Parses JSON and validates presence of <code>model_id</code>.\n    - Loads <code>house_id</code> and <code>secret_key</code> via <code>config.load()</code>.\n    - Computes SHA\u2011256 of <code>house_id + secret_key</code>.\n    - Sends a GET to the vendor URL with headers:\n        X-House-ID: <house_id>\n        X-Auth-Hash: <computed hash>\n      and JSON payload {\"model_id\": \"<model_id>\"}</p>\n\n<p>Returns:\n    200: <JSON> \u2014 upstream response for the specified model\n    400: {\"error\": \"Missing 'model_id' in request body.\"} \u2014 if <code>model_id</code> missing\n    400: {\"error\": \"Invalid JSON in request body.\"}      \u2014 on JSON decode errors\n    500: {\"error\": \"<message>\"}                         \u2014 missing config or other exceptions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();